//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha2

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentEnvVarsObservation) DeepCopyInto(out *AgentEnvVarsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentEnvVarsObservation.
func (in *AgentEnvVarsObservation) DeepCopy() *AgentEnvVarsObservation {
	if in == nil {
		return nil
	}
	out := new(AgentEnvVarsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentEnvVarsParameters) DeepCopyInto(out *AgentEnvVarsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentEnvVarsParameters.
func (in *AgentEnvVarsParameters) DeepCopy() *AgentEnvVarsParameters {
	if in == nil {
		return nil
	}
	out := new(AgentEnvVarsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksConfigObservation) DeepCopyInto(out *AksConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksConfigObservation.
func (in *AksConfigObservation) DeepCopy() *AksConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AksConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksConfigParameters) DeepCopyInto(out *AksConfigParameters) {
	*out = *in
	if in.AadServerAppSecretSecretRef != nil {
		in, out := &in.AadServerAppSecretSecretRef, &out.AadServerAppSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AadTenantIDSecretRef != nil {
		in, out := &in.AadTenantIDSecretRef, &out.AadTenantIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AddClientAppIDSecretRef != nil {
		in, out := &in.AddClientAppIDSecretRef, &out.AddClientAppIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AddServerAppIDSecretRef != nil {
		in, out := &in.AddServerAppIDSecretRef, &out.AddServerAppIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.AgentDNSPrefix != nil {
		in, out := &in.AgentDNSPrefix, &out.AgentDNSPrefix
		*out = new(string)
		**out = **in
	}
	if in.AgentOsDiskSize != nil {
		in, out := &in.AgentOsDiskSize, &out.AgentOsDiskSize
		*out = new(float64)
		**out = **in
	}
	if in.AgentPoolName != nil {
		in, out := &in.AgentPoolName, &out.AgentPoolName
		*out = new(string)
		**out = **in
	}
	if in.AgentStorageProfile != nil {
		in, out := &in.AgentStorageProfile, &out.AgentStorageProfile
		*out = new(string)
		**out = **in
	}
	if in.AgentVMSize != nil {
		in, out := &in.AgentVMSize, &out.AgentVMSize
		*out = new(string)
		**out = **in
	}
	if in.AuthBaseURL != nil {
		in, out := &in.AuthBaseURL, &out.AuthBaseURL
		*out = new(string)
		**out = **in
	}
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	out.ClientIDSecretRef = in.ClientIDSecretRef
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.DNSServiceIP != nil {
		in, out := &in.DNSServiceIP, &out.DNSServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCidr != nil {
		in, out := &in.DockerBridgeCidr, &out.DockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.EnableHTTPApplicationRouting != nil {
		in, out := &in.EnableHTTPApplicationRouting, &out.EnableHTTPApplicationRouting
		*out = new(bool)
		**out = **in
	}
	if in.EnableMonitoring != nil {
		in, out := &in.EnableMonitoring, &out.EnableMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspace != nil {
		in, out := &in.LogAnalyticsWorkspace, &out.LogAnalyticsWorkspace
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceResourceGroup != nil {
		in, out := &in.LogAnalyticsWorkspaceResourceGroup, &out.LogAnalyticsWorkspaceResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.MasterDNSPrefix != nil {
		in, out := &in.MasterDNSPrefix, &out.MasterDNSPrefix
		*out = new(string)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(float64)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHPublicKeyContents != nil {
		in, out := &in.SSHPublicKeyContents, &out.SSHPublicKeyContents
		*out = new(string)
		**out = **in
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionID != nil {
		in, out := &in.SubscriptionID, &out.SubscriptionID
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkResourceGroup != nil {
		in, out := &in.VirtualNetworkResourceGroup, &out.VirtualNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksConfigParameters.
func (in *AksConfigParameters) DeepCopy() *AksConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AksConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksConfigV2Observation) DeepCopyInto(out *AksConfigV2Observation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksConfigV2Observation.
func (in *AksConfigV2Observation) DeepCopy() *AksConfigV2Observation {
	if in == nil {
		return nil
	}
	out := new(AksConfigV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AksConfigV2Parameters) DeepCopyInto(out *AksConfigV2Parameters) {
	*out = *in
	if in.AuthBaseURL != nil {
		in, out := &in.AuthBaseURL, &out.AuthBaseURL
		*out = new(string)
		**out = **in
	}
	if in.AuthorizedIPRanges != nil {
		in, out := &in.AuthorizedIPRanges, &out.AuthorizedIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BaseURL != nil {
		in, out := &in.BaseURL, &out.BaseURL
		*out = new(string)
		**out = **in
	}
	if in.CloudCredentialID != nil {
		in, out := &in.CloudCredentialID, &out.CloudCredentialID
		*out = new(string)
		**out = **in
	}
	if in.DNSPrefix != nil {
		in, out := &in.DNSPrefix, &out.DNSPrefix
		*out = new(string)
		**out = **in
	}
	if in.HTTPApplicationRouting != nil {
		in, out := &in.HTTPApplicationRouting, &out.HTTPApplicationRouting
		*out = new(bool)
		**out = **in
	}
	if in.Imported != nil {
		in, out := &in.Imported, &out.Imported
		*out = new(bool)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxAdminUsername != nil {
		in, out := &in.LinuxAdminUsername, &out.LinuxAdminUsername
		*out = new(string)
		**out = **in
	}
	if in.LinuxSSHPublicKey != nil {
		in, out := &in.LinuxSSHPublicKey, &out.LinuxSSHPublicKey
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceGroup != nil {
		in, out := &in.LogAnalyticsWorkspaceGroup, &out.LogAnalyticsWorkspaceGroup
		*out = new(string)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceName != nil {
		in, out := &in.LogAnalyticsWorkspaceName, &out.LogAnalyticsWorkspaceName
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkDNSServiceIP != nil {
		in, out := &in.NetworkDNSServiceIP, &out.NetworkDNSServiceIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkDockerBridgeCidr != nil {
		in, out := &in.NetworkDockerBridgeCidr, &out.NetworkDockerBridgeCidr
		*out = new(string)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(string)
		**out = **in
	}
	if in.NetworkPodCidr != nil {
		in, out := &in.NetworkPodCidr, &out.NetworkPodCidr
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.NetworkServiceCidr != nil {
		in, out := &in.NetworkServiceCidr, &out.NetworkServiceCidr
		*out = new(string)
		**out = **in
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]NodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateCluster != nil {
		in, out := &in.PrivateCluster, &out.PrivateCluster
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ResourceLocation != nil {
		in, out := &in.ResourceLocation, &out.ResourceLocation
		*out = new(string)
		**out = **in
	}
	if in.Subnet != nil {
		in, out := &in.Subnet, &out.Subnet
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkResourceGroup != nil {
		in, out := &in.VirtualNetworkResourceGroup, &out.VirtualNetworkResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AksConfigV2Parameters.
func (in *AksConfigV2Parameters) DeepCopy() *AksConfigV2Parameters {
	if in == nil {
		return nil
	}
	out := new(AksConfigV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroup) DeepCopyInto(out *AlertGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroup.
func (in *AlertGroup) DeepCopy() *AlertGroup {
	if in == nil {
		return nil
	}
	out := new(AlertGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupList) DeepCopyInto(out *AlertGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupList.
func (in *AlertGroupList) DeepCopy() *AlertGroupList {
	if in == nil {
		return nil
	}
	out := new(AlertGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupObservation) DeepCopyInto(out *AlertGroupObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupObservation.
func (in *AlertGroupObservation) DeepCopy() *AlertGroupObservation {
	if in == nil {
		return nil
	}
	out := new(AlertGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupParameters) DeepCopyInto(out *AlertGroupParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GroupIntervalSeconds != nil {
		in, out := &in.GroupIntervalSeconds, &out.GroupIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupWaitSeconds != nil {
		in, out := &in.GroupWaitSeconds, &out.GroupWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Recipients != nil {
		in, out := &in.Recipients, &out.Recipients
		*out = make([]RecipientsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepeatIntervalSeconds != nil {
		in, out := &in.RepeatIntervalSeconds, &out.RepeatIntervalSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupParameters.
func (in *AlertGroupParameters) DeepCopy() *AlertGroupParameters {
	if in == nil {
		return nil
	}
	out := new(AlertGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupSpec) DeepCopyInto(out *AlertGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupSpec.
func (in *AlertGroupSpec) DeepCopy() *AlertGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AlertGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertGroupStatus) DeepCopyInto(out *AlertGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertGroupStatus.
func (in *AlertGroupStatus) DeepCopy() *AlertGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AlertGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRule) DeepCopyInto(out *AlertRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRule.
func (in *AlertRule) DeepCopy() *AlertRule {
	if in == nil {
		return nil
	}
	out := new(AlertRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleList) DeepCopyInto(out *AlertRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleList.
func (in *AlertRuleList) DeepCopy() *AlertRuleList {
	if in == nil {
		return nil
	}
	out := new(AlertRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleObservation) DeepCopyInto(out *AlertRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleObservation.
func (in *AlertRuleObservation) DeepCopy() *AlertRuleObservation {
	if in == nil {
		return nil
	}
	out := new(AlertRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleParameters) DeepCopyInto(out *AlertRuleParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.EventRule != nil {
		in, out := &in.EventRule, &out.EventRule
		*out = make([]EventRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupIntervalSeconds != nil {
		in, out := &in.GroupIntervalSeconds, &out.GroupIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.GroupWaitSeconds != nil {
		in, out := &in.GroupWaitSeconds, &out.GroupWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Inherited != nil {
		in, out := &in.Inherited, &out.Inherited
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetricRule != nil {
		in, out := &in.MetricRule, &out.MetricRule
		*out = make([]MetricRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeRule != nil {
		in, out := &in.NodeRule, &out.NodeRule
		*out = make([]NodeRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RepeatIntervalSeconds != nil {
		in, out := &in.RepeatIntervalSeconds, &out.RepeatIntervalSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.SystemServiceRule != nil {
		in, out := &in.SystemServiceRule, &out.SystemServiceRule
		*out = make([]SystemServiceRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleParameters.
func (in *AlertRuleParameters) DeepCopy() *AlertRuleParameters {
	if in == nil {
		return nil
	}
	out := new(AlertRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleSpec) DeepCopyInto(out *AlertRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleSpec.
func (in *AlertRuleSpec) DeepCopy() *AlertRuleSpec {
	if in == nil {
		return nil
	}
	out := new(AlertRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertRuleStatus) DeepCopyInto(out *AlertRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertRuleStatus.
func (in *AlertRuleStatus) DeepCopy() *AlertRuleStatus {
	if in == nil {
		return nil
	}
	out := new(AlertRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogConfigurationObservation) DeepCopyInto(out *AuditLogConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogConfigurationObservation.
func (in *AuditLogConfigurationObservation) DeepCopy() *AuditLogConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(AuditLogConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogConfigurationParameters) DeepCopyInto(out *AuditLogConfigurationParameters) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackup != nil {
		in, out := &in.MaxBackup, &out.MaxBackup
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogConfigurationParameters.
func (in *AuditLogConfigurationParameters) DeepCopy() *AuditLogConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(AuditLogConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogObservation) DeepCopyInto(out *AuditLogObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogObservation.
func (in *AuditLogObservation) DeepCopy() *AuditLogObservation {
	if in == nil {
		return nil
	}
	out := new(AuditLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditLogParameters) DeepCopyInto(out *AuditLogParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditLogParameters.
func (in *AuditLogParameters) DeepCopy() *AuditLogParameters {
	if in == nil {
		return nil
	}
	out := new(AuditLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationObservation) DeepCopyInto(out *AuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationObservation.
func (in *AuthenticationObservation) DeepCopy() *AuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationParameters) DeepCopyInto(out *AuthenticationParameters) {
	*out = *in
	if in.Sans != nil {
		in, out := &in.Sans, &out.Sans
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationParameters.
func (in *AuthenticationParameters) DeepCopy() *AuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationObservation) DeepCopyInto(out *AuthorizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationObservation.
func (in *AuthorizationObservation) DeepCopy() *AuthorizationObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationParameters) DeepCopyInto(out *AuthorizationParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationParameters.
func (in *AuthorizationParameters) DeepCopy() *AuthorizationParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingObservation) DeepCopyInto(out *AutoscalingObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingObservation.
func (in *AutoscalingObservation) DeepCopy() *AutoscalingObservation {
	if in == nil {
		return nil
	}
	out := new(AutoscalingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalingParameters) DeepCopyInto(out *AutoscalingParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalingParameters.
func (in *AutoscalingParameters) DeepCopy() *AutoscalingParameters {
	if in == nil {
		return nil
	}
	out := new(AutoscalingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderGlobalObservation) DeepCopyInto(out *AwsCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderGlobalObservation.
func (in *AwsCloudProviderGlobalObservation) DeepCopy() *AwsCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderGlobalParameters) DeepCopyInto(out *AwsCloudProviderGlobalParameters) {
	*out = *in
	if in.DisableSecurityGroupIngress != nil {
		in, out := &in.DisableSecurityGroupIngress, &out.DisableSecurityGroupIngress
		*out = new(bool)
		**out = **in
	}
	if in.DisableStrictZoneCheck != nil {
		in, out := &in.DisableStrictZoneCheck, &out.DisableStrictZoneCheck
		*out = new(bool)
		**out = **in
	}
	if in.ELBSecurityGroup != nil {
		in, out := &in.ELBSecurityGroup, &out.ELBSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterID != nil {
		in, out := &in.KubernetesClusterID, &out.KubernetesClusterID
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterTag != nil {
		in, out := &in.KubernetesClusterTag, &out.KubernetesClusterTag
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderGlobalParameters.
func (in *AwsCloudProviderGlobalParameters) DeepCopy() *AwsCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderObservation) DeepCopyInto(out *AwsCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderObservation.
func (in *AwsCloudProviderObservation) DeepCopy() *AwsCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderParameters) DeepCopyInto(out *AwsCloudProviderParameters) {
	*out = *in
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]GlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceOverride != nil {
		in, out := &in.ServiceOverride, &out.ServiceOverride
		*out = make([]ServiceOverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderParameters.
func (in *AwsCloudProviderParameters) DeepCopy() *AwsCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderServiceOverrideObservation) DeepCopyInto(out *AwsCloudProviderServiceOverrideObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderServiceOverrideObservation.
func (in *AwsCloudProviderServiceOverrideObservation) DeepCopy() *AwsCloudProviderServiceOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderServiceOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsCloudProviderServiceOverrideParameters) DeepCopyInto(out *AwsCloudProviderServiceOverrideParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SigningMethod != nil {
		in, out := &in.SigningMethod, &out.SigningMethod
		*out = new(string)
		**out = **in
	}
	if in.SigningName != nil {
		in, out := &in.SigningName, &out.SigningName
		*out = new(string)
		**out = **in
	}
	if in.SigningRegion != nil {
		in, out := &in.SigningRegion, &out.SigningRegion
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsCloudProviderServiceOverrideParameters.
func (in *AwsCloudProviderServiceOverrideParameters) DeepCopy() *AwsCloudProviderServiceOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(AwsCloudProviderServiceOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudProviderObservation) DeepCopyInto(out *AzureCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudProviderObservation.
func (in *AzureCloudProviderObservation) DeepCopy() *AzureCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(AzureCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureCloudProviderParameters) DeepCopyInto(out *AzureCloudProviderParameters) {
	*out = *in
	if in.AadClientCertPasswordSecretRef != nil {
		in, out := &in.AadClientCertPasswordSecretRef, &out.AadClientCertPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AadClientCertPath != nil {
		in, out := &in.AadClientCertPath, &out.AadClientCertPath
		*out = new(string)
		**out = **in
	}
	out.AadClientIDSecretRef = in.AadClientIDSecretRef
	out.AadClientSecretSecretRef = in.AadClientSecretSecretRef
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudProviderBackoff != nil {
		in, out := &in.CloudProviderBackoff, &out.CloudProviderBackoff
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderBackoffDuration != nil {
		in, out := &in.CloudProviderBackoffDuration, &out.CloudProviderBackoffDuration
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffExponent != nil {
		in, out := &in.CloudProviderBackoffExponent, &out.CloudProviderBackoffExponent
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffJitter != nil {
		in, out := &in.CloudProviderBackoffJitter, &out.CloudProviderBackoffJitter
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffRetries != nil {
		in, out := &in.CloudProviderBackoffRetries, &out.CloudProviderBackoffRetries
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimit != nil {
		in, out := &in.CloudProviderRateLimit, &out.CloudProviderRateLimit
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderRateLimitBucket != nil {
		in, out := &in.CloudProviderRateLimitBucket, &out.CloudProviderRateLimitBucket
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimitQPS != nil {
		in, out := &in.CloudProviderRateLimitQPS, &out.CloudProviderRateLimitQPS
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumLoadBalancerRuleCount != nil {
		in, out := &in.MaximumLoadBalancerRuleCount, &out.MaximumLoadBalancerRuleCount
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryAvailabilitySetName != nil {
		in, out := &in.PrimaryAvailabilitySetName, &out.PrimaryAvailabilitySetName
		*out = new(string)
		**out = **in
	}
	if in.PrimaryScaleSetName != nil {
		in, out := &in.PrimaryScaleSetName, &out.PrimaryScaleSetName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.RouteTableName != nil {
		in, out := &in.RouteTableName, &out.RouteTableName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	out.SubscriptionIDSecretRef = in.SubscriptionIDSecretRef
	out.TenantIDSecretRef = in.TenantIDSecretRef
	if in.UseInstanceMetadata != nil {
		in, out := &in.UseInstanceMetadata, &out.UseInstanceMetadata
		*out = new(bool)
		**out = **in
	}
	if in.UseManagedIdentityExtension != nil {
		in, out := &in.UseManagedIdentityExtension, &out.UseManagedIdentityExtension
		*out = new(bool)
		**out = **in
	}
	if in.VMType != nil {
		in, out := &in.VMType, &out.VMType
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureCloudProviderParameters.
func (in *AzureCloudProviderParameters) DeepCopy() *AzureCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(AzureCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigObservation) DeepCopyInto(out *BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigObservation.
func (in *BackupConfigObservation) DeepCopy() *BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigParameters) DeepCopyInto(out *BackupConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IntervalHours != nil {
		in, out := &in.IntervalHours, &out.IntervalHours
		*out = new(float64)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupConfig != nil {
		in, out := &in.S3BackupConfig, &out.S3BackupConfig
		*out = make([]S3BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SafeTimestamp != nil {
		in, out := &in.SafeTimestamp, &out.SafeTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigParameters.
func (in *BackupConfigParameters) DeepCopy() *BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigS3BackupConfigObservation) DeepCopyInto(out *BackupConfigS3BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigS3BackupConfigObservation.
func (in *BackupConfigS3BackupConfigObservation) DeepCopy() *BackupConfigS3BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BackupConfigS3BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupConfigS3BackupConfigParameters) DeepCopyInto(out *BackupConfigS3BackupConfigParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CustomCA != nil {
		in, out := &in.CustomCA, &out.CustomCA
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupConfigS3BackupConfigParameters.
func (in *BackupConfigS3BackupConfigParameters) DeepCopy() *BackupConfigS3BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BackupConfigS3BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostObservation) DeepCopyInto(out *BastionHostObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostObservation.
func (in *BastionHostObservation) DeepCopy() *BastionHostObservation {
	if in == nil {
		return nil
	}
	out := new(BastionHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BastionHostParameters) DeepCopyInto(out *BastionHostParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BastionHostParameters.
func (in *BastionHostParameters) DeepCopy() *BastionHostParameters {
	if in == nil {
		return nil
	}
	out := new(BastionHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageObservation) DeepCopyInto(out *BlockStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageObservation.
func (in *BlockStorageObservation) DeepCopy() *BlockStorageObservation {
	if in == nil {
		return nil
	}
	out := new(BlockStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockStorageParameters) DeepCopyInto(out *BlockStorageParameters) {
	*out = *in
	if in.BsVersion != nil {
		in, out := &in.BsVersion, &out.BsVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVolumeAz != nil {
		in, out := &in.IgnoreVolumeAz, &out.IgnoreVolumeAz
		*out = new(bool)
		**out = **in
	}
	if in.TrustDevicePath != nil {
		in, out := &in.TrustDevicePath, &out.TrustDevicePath
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockStorageParameters.
func (in *BlockStorageParameters) DeepCopy() *BlockStorageParameters {
	if in == nil {
		return nil
	}
	out := new(BlockStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CalicoNetworkProviderObservation) DeepCopyInto(out *CalicoNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CalicoNetworkProviderObservation.
func (in *CalicoNetworkProviderObservation) DeepCopy() *CalicoNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CalicoNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CalicoNetworkProviderParameters) DeepCopyInto(out *CalicoNetworkProviderParameters) {
	*out = *in
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CalicoNetworkProviderParameters.
func (in *CalicoNetworkProviderParameters) DeepCopy() *CalicoNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CalicoNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanalNetworkProviderObservation) DeepCopyInto(out *CanalNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanalNetworkProviderObservation.
func (in *CanalNetworkProviderObservation) DeepCopy() *CanalNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CanalNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanalNetworkProviderParameters) DeepCopyInto(out *CanalNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanalNetworkProviderParameters.
func (in *CanalNetworkProviderParameters) DeepCopy() *CanalNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CanalNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrBlocksObservation) DeepCopyInto(out *CidrBlocksObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrBlocksObservation.
func (in *CidrBlocksObservation) DeepCopy() *CidrBlocksObservation {
	if in == nil {
		return nil
	}
	out := new(CidrBlocksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CidrBlocksParameters) DeepCopyInto(out *CidrBlocksParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CidrBlocksParameters.
func (in *CidrBlocksParameters) DeepCopy() *CidrBlocksParameters {
	if in == nil {
		return nil
	}
	out := new(CidrBlocksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CisScanConfigObservation) DeepCopyInto(out *CisScanConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CisScanConfigObservation.
func (in *CisScanConfigObservation) DeepCopy() *CisScanConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CisScanConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CisScanConfigParameters) DeepCopyInto(out *CisScanConfigParameters) {
	*out = *in
	if in.DebugMaster != nil {
		in, out := &in.DebugMaster, &out.DebugMaster
		*out = new(bool)
		**out = **in
	}
	if in.DebugWorker != nil {
		in, out := &in.DebugWorker, &out.DebugWorker
		*out = new(bool)
		**out = **in
	}
	if in.OverrideBenchmarkVersion != nil {
		in, out := &in.OverrideBenchmarkVersion, &out.OverrideBenchmarkVersion
		*out = new(string)
		**out = **in
	}
	if in.OverrideSkip != nil {
		in, out := &in.OverrideSkip, &out.OverrideSkip
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CisScanConfigParameters.
func (in *CisScanConfigParameters) DeepCopy() *CisScanConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CisScanConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderAwsCloudProviderObservation) DeepCopyInto(out *CloudProviderAwsCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderAwsCloudProviderObservation.
func (in *CloudProviderAwsCloudProviderObservation) DeepCopy() *CloudProviderAwsCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderAwsCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderAwsCloudProviderParameters) DeepCopyInto(out *CloudProviderAwsCloudProviderParameters) {
	*out = *in
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]AwsCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceOverride != nil {
		in, out := &in.ServiceOverride, &out.ServiceOverride
		*out = make([]AwsCloudProviderServiceOverrideParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderAwsCloudProviderParameters.
func (in *CloudProviderAwsCloudProviderParameters) DeepCopy() *CloudProviderAwsCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderAwsCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderAzureCloudProviderObservation) DeepCopyInto(out *CloudProviderAzureCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderAzureCloudProviderObservation.
func (in *CloudProviderAzureCloudProviderObservation) DeepCopy() *CloudProviderAzureCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderAzureCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderAzureCloudProviderParameters) DeepCopyInto(out *CloudProviderAzureCloudProviderParameters) {
	*out = *in
	if in.AadClientCertPasswordSecretRef != nil {
		in, out := &in.AadClientCertPasswordSecretRef, &out.AadClientCertPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AadClientCertPath != nil {
		in, out := &in.AadClientCertPath, &out.AadClientCertPath
		*out = new(string)
		**out = **in
	}
	out.AadClientIDSecretRef = in.AadClientIDSecretRef
	out.AadClientSecretSecretRef = in.AadClientSecretSecretRef
	if in.Cloud != nil {
		in, out := &in.Cloud, &out.Cloud
		*out = new(string)
		**out = **in
	}
	if in.CloudProviderBackoff != nil {
		in, out := &in.CloudProviderBackoff, &out.CloudProviderBackoff
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderBackoffDuration != nil {
		in, out := &in.CloudProviderBackoffDuration, &out.CloudProviderBackoffDuration
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffExponent != nil {
		in, out := &in.CloudProviderBackoffExponent, &out.CloudProviderBackoffExponent
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffJitter != nil {
		in, out := &in.CloudProviderBackoffJitter, &out.CloudProviderBackoffJitter
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderBackoffRetries != nil {
		in, out := &in.CloudProviderBackoffRetries, &out.CloudProviderBackoffRetries
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimit != nil {
		in, out := &in.CloudProviderRateLimit, &out.CloudProviderRateLimit
		*out = new(bool)
		**out = **in
	}
	if in.CloudProviderRateLimitBucket != nil {
		in, out := &in.CloudProviderRateLimitBucket, &out.CloudProviderRateLimitBucket
		*out = new(float64)
		**out = **in
	}
	if in.CloudProviderRateLimitQPS != nil {
		in, out := &in.CloudProviderRateLimitQPS, &out.CloudProviderRateLimitQPS
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaximumLoadBalancerRuleCount != nil {
		in, out := &in.MaximumLoadBalancerRuleCount, &out.MaximumLoadBalancerRuleCount
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryAvailabilitySetName != nil {
		in, out := &in.PrimaryAvailabilitySetName, &out.PrimaryAvailabilitySetName
		*out = new(string)
		**out = **in
	}
	if in.PrimaryScaleSetName != nil {
		in, out := &in.PrimaryScaleSetName, &out.PrimaryScaleSetName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.RouteTableName != nil {
		in, out := &in.RouteTableName, &out.RouteTableName
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupName != nil {
		in, out := &in.SecurityGroupName, &out.SecurityGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	out.SubscriptionIDSecretRef = in.SubscriptionIDSecretRef
	out.TenantIDSecretRef = in.TenantIDSecretRef
	if in.UseInstanceMetadata != nil {
		in, out := &in.UseInstanceMetadata, &out.UseInstanceMetadata
		*out = new(bool)
		**out = **in
	}
	if in.UseManagedIdentityExtension != nil {
		in, out := &in.UseManagedIdentityExtension, &out.UseManagedIdentityExtension
		*out = new(bool)
		**out = **in
	}
	if in.VMType != nil {
		in, out := &in.VMType, &out.VMType
		*out = new(string)
		**out = **in
	}
	if in.VnetName != nil {
		in, out := &in.VnetName, &out.VnetName
		*out = new(string)
		**out = **in
	}
	if in.VnetResourceGroup != nil {
		in, out := &in.VnetResourceGroup, &out.VnetResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderAzureCloudProviderParameters.
func (in *CloudProviderAzureCloudProviderParameters) DeepCopy() *CloudProviderAzureCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderAzureCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderObservation) DeepCopyInto(out *CloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderObservation.
func (in *CloudProviderObservation) DeepCopy() *CloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderOpenstackCloudProviderGlobalObservation) DeepCopyInto(out *CloudProviderOpenstackCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderOpenstackCloudProviderGlobalObservation.
func (in *CloudProviderOpenstackCloudProviderGlobalObservation) DeepCopy() *CloudProviderOpenstackCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderOpenstackCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderOpenstackCloudProviderGlobalParameters) DeepCopyInto(out *CloudProviderOpenstackCloudProviderGlobalParameters) {
	*out = *in
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.DomainIDSecretRef != nil {
		in, out := &in.DomainIDSecretRef, &out.DomainIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TenantIDSecretRef != nil {
		in, out := &in.TenantIDSecretRef, &out.TenantIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
	if in.TrustIDSecretRef != nil {
		in, out := &in.TrustIDSecretRef, &out.TrustIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.UsernameSecretRef = in.UsernameSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderOpenstackCloudProviderGlobalParameters.
func (in *CloudProviderOpenstackCloudProviderGlobalParameters) DeepCopy() *CloudProviderOpenstackCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderOpenstackCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderOpenstackCloudProviderObservation) DeepCopyInto(out *CloudProviderOpenstackCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderOpenstackCloudProviderObservation.
func (in *CloudProviderOpenstackCloudProviderObservation) DeepCopy() *CloudProviderOpenstackCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderOpenstackCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderOpenstackCloudProviderParameters) DeepCopyInto(out *CloudProviderOpenstackCloudProviderParameters) {
	*out = *in
	if in.BlockStorage != nil {
		in, out := &in.BlockStorage, &out.BlockStorage
		*out = make([]OpenstackCloudProviderBlockStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]CloudProviderOpenstackCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]OpenstackCloudProviderLoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]OpenstackCloudProviderMetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]OpenstackCloudProviderRouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderOpenstackCloudProviderParameters.
func (in *CloudProviderOpenstackCloudProviderParameters) DeepCopy() *CloudProviderOpenstackCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderOpenstackCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderParameters) DeepCopyInto(out *CloudProviderParameters) {
	*out = *in
	if in.AwsCloudProvider != nil {
		in, out := &in.AwsCloudProvider, &out.AwsCloudProvider
		*out = make([]AwsCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureCloudProvider != nil {
		in, out := &in.AzureCloudProvider, &out.AzureCloudProvider
		*out = make([]AzureCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomCloudProvider != nil {
		in, out := &in.CustomCloudProvider, &out.CustomCloudProvider
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenstackCloudProvider != nil {
		in, out := &in.OpenstackCloudProvider, &out.OpenstackCloudProvider
		*out = make([]OpenstackCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsphereCloudProvider != nil {
		in, out := &in.VsphereCloudProvider, &out.VsphereCloudProvider
		*out = make([]VsphereCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderParameters.
func (in *CloudProviderParameters) DeepCopy() *CloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderVsphereCloudProviderGlobalObservation) DeepCopyInto(out *CloudProviderVsphereCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderVsphereCloudProviderGlobalObservation.
func (in *CloudProviderVsphereCloudProviderGlobalObservation) DeepCopy() *CloudProviderVsphereCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderVsphereCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderVsphereCloudProviderGlobalParameters) DeepCopyInto(out *CloudProviderVsphereCloudProviderGlobalParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.InsecureFlag != nil {
		in, out := &in.InsecureFlag, &out.InsecureFlag
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderVsphereCloudProviderGlobalParameters.
func (in *CloudProviderVsphereCloudProviderGlobalParameters) DeepCopy() *CloudProviderVsphereCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderVsphereCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderVsphereCloudProviderObservation) DeepCopyInto(out *CloudProviderVsphereCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderVsphereCloudProviderObservation.
func (in *CloudProviderVsphereCloudProviderObservation) DeepCopy() *CloudProviderVsphereCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(CloudProviderVsphereCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudProviderVsphereCloudProviderParameters) DeepCopyInto(out *CloudProviderVsphereCloudProviderParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]VsphereCloudProviderDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]CloudProviderVsphereCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]VsphereCloudProviderNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualCenter != nil {
		in, out := &in.VirtualCenter, &out.VirtualCenter
		*out = make([]VsphereCloudProviderVirtualCenterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]VsphereCloudProviderWorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudProviderVsphereCloudProviderParameters.
func (in *CloudProviderVsphereCloudProviderParameters) DeepCopy() *CloudProviderVsphereCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(CloudProviderVsphereCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAddonsObservation) DeepCopyInto(out *ClusterAddonsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAddonsObservation.
func (in *ClusterAddonsObservation) DeepCopy() *ClusterAddonsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAddonsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAddonsParameters) DeepCopyInto(out *ClusterAddonsParameters) {
	*out = *in
	if in.HTTPLoadBalancing != nil {
		in, out := &in.HTTPLoadBalancing, &out.HTTPLoadBalancing
		*out = new(bool)
		**out = **in
	}
	if in.HorizontalPodAutoscaling != nil {
		in, out := &in.HorizontalPodAutoscaling, &out.HorizontalPodAutoscaling
		*out = new(bool)
		**out = **in
	}
	if in.NetworkPolicyConfig != nil {
		in, out := &in.NetworkPolicyConfig, &out.NetworkPolicyConfig
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAddonsParameters.
func (in *ClusterAddonsParameters) DeepCopy() *ClusterAddonsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAddonsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAuthEndpointObservation) DeepCopyInto(out *ClusterAuthEndpointObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAuthEndpointObservation.
func (in *ClusterAuthEndpointObservation) DeepCopy() *ClusterAuthEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterAuthEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAuthEndpointParameters) DeepCopyInto(out *ClusterAuthEndpointParameters) {
	*out = *in
	if in.CACerts != nil {
		in, out := &in.CACerts, &out.CACerts
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAuthEndpointParameters.
func (in *ClusterAuthEndpointParameters) DeepCopy() *ClusterAuthEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterAuthEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigClusterAuthEndpointObservation) DeepCopyInto(out *ClusterConfigClusterAuthEndpointObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigClusterAuthEndpointObservation.
func (in *ClusterConfigClusterAuthEndpointObservation) DeepCopy() *ClusterConfigClusterAuthEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigClusterAuthEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigClusterAuthEndpointParameters) DeepCopyInto(out *ClusterConfigClusterAuthEndpointParameters) {
	*out = *in
	if in.CACerts != nil {
		in, out := &in.CACerts, &out.CACerts
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigClusterAuthEndpointParameters.
func (in *ClusterConfigClusterAuthEndpointParameters) DeepCopy() *ClusterConfigClusterAuthEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigClusterAuthEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigObservation) DeepCopyInto(out *ClusterConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigObservation.
func (in *ClusterConfigObservation) DeepCopy() *ClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigParameters) DeepCopyInto(out *ClusterConfigParameters) {
	*out = *in
	if in.ClusterAuthEndpoint != nil {
		in, out := &in.ClusterAuthEndpoint, &out.ClusterAuthEndpoint
		*out = make([]ClusterConfigClusterAuthEndpointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultClusterRoleForProjectMembers != nil {
		in, out := &in.DefaultClusterRoleForProjectMembers, &out.DefaultClusterRoleForProjectMembers
		*out = new(string)
		**out = **in
	}
	if in.DefaultPodSecurityPolicyTemplateID != nil {
		in, out := &in.DefaultPodSecurityPolicyTemplateID, &out.DefaultPodSecurityPolicyTemplateID
		*out = new(string)
		**out = **in
	}
	if in.DesiredAgentImage != nil {
		in, out := &in.DesiredAgentImage, &out.DesiredAgentImage
		*out = new(string)
		**out = **in
	}
	if in.DesiredAuthImage != nil {
		in, out := &in.DesiredAuthImage, &out.DesiredAuthImage
		*out = new(string)
		**out = **in
	}
	if in.DockerRootDir != nil {
		in, out := &in.DockerRootDir, &out.DockerRootDir
		*out = new(string)
		**out = **in
	}
	if in.EnableClusterAlerting != nil {
		in, out := &in.EnableClusterAlerting, &out.EnableClusterAlerting
		*out = new(bool)
		**out = **in
	}
	if in.EnableClusterMonitoring != nil {
		in, out := &in.EnableClusterMonitoring, &out.EnableClusterMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkPolicy != nil {
		in, out := &in.EnableNetworkPolicy, &out.EnableNetworkPolicy
		*out = new(bool)
		**out = **in
	}
	if in.RkeConfig != nil {
		in, out := &in.RkeConfig, &out.RkeConfig
		*out = make([]ClusterConfigRkeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScheduledClusterScan != nil {
		in, out := &in.ScheduledClusterScan, &out.ScheduledClusterScan
		*out = make([]ClusterConfigScheduledClusterScanParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsPreferedCluster != nil {
		in, out := &in.WindowsPreferedCluster, &out.WindowsPreferedCluster
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigParameters.
func (in *ClusterConfigParameters) DeepCopy() *ClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigRkeConfigNetworkObservation) DeepCopyInto(out *ClusterConfigRkeConfigNetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigRkeConfigNetworkObservation.
func (in *ClusterConfigRkeConfigNetworkObservation) DeepCopy() *ClusterConfigRkeConfigNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigRkeConfigNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigRkeConfigNetworkParameters) DeepCopyInto(out *ClusterConfigRkeConfigNetworkParameters) {
	*out = *in
	if in.CalicoNetworkProvider != nil {
		in, out := &in.CalicoNetworkProvider, &out.CalicoNetworkProvider
		*out = make([]NetworkCalicoNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanalNetworkProvider != nil {
		in, out := &in.CanalNetworkProvider, &out.CanalNetworkProvider
		*out = make([]NetworkCanalNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlannelNetworkProvider != nil {
		in, out := &in.FlannelNetworkProvider, &out.FlannelNetworkProvider
		*out = make([]NetworkFlannelNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(string)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]RkeConfigNetworkTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeaveNetworkProvider != nil {
		in, out := &in.WeaveNetworkProvider, &out.WeaveNetworkProvider
		*out = make([]NetworkWeaveNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigRkeConfigNetworkParameters.
func (in *ClusterConfigRkeConfigNetworkParameters) DeepCopy() *ClusterConfigRkeConfigNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigRkeConfigNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigRkeConfigObservation) DeepCopyInto(out *ClusterConfigRkeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigRkeConfigObservation.
func (in *ClusterConfigRkeConfigObservation) DeepCopy() *ClusterConfigRkeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigRkeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigRkeConfigParameters) DeepCopyInto(out *ClusterConfigRkeConfigParameters) {
	*out = *in
	if in.AddonJobTimeout != nil {
		in, out := &in.AddonJobTimeout, &out.AddonJobTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = new(string)
		**out = **in
	}
	if in.AddonsInclude != nil {
		in, out := &in.AddonsInclude, &out.AddonsInclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = make([]RkeConfigAuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]RkeConfigAuthorizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BastionHost != nil {
		in, out := &in.BastionHost, &out.BastionHost
		*out = make([]RkeConfigBastionHostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = make([]RkeConfigCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]RkeConfigDNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableCriDockerd != nil {
		in, out := &in.EnableCriDockerd, &out.EnableCriDockerd
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreDockerVersion != nil {
		in, out := &in.IgnoreDockerVersion, &out.IgnoreDockerVersion
		*out = new(bool)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]RkeConfigIngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]RkeConfigMonitoringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]ClusterConfigRkeConfigNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]RkeConfigNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixPath != nil {
		in, out := &in.PrefixPath, &out.PrefixPath
		*out = new(string)
		**out = **in
	}
	if in.PrivateRegistries != nil {
		in, out := &in.PrivateRegistries, &out.PrivateRegistries
		*out = make([]RkeConfigPrivateRegistriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHCertPath != nil {
		in, out := &in.SSHCertPath, &out.SSHCertPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]RkeConfigServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpgradeStrategy != nil {
		in, out := &in.UpgradeStrategy, &out.UpgradeStrategy
		*out = make([]ClusterConfigRkeConfigUpgradeStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WinPrefixPath != nil {
		in, out := &in.WinPrefixPath, &out.WinPrefixPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigRkeConfigParameters.
func (in *ClusterConfigRkeConfigParameters) DeepCopy() *ClusterConfigRkeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigRkeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigRkeConfigUpgradeStrategyObservation) DeepCopyInto(out *ClusterConfigRkeConfigUpgradeStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigRkeConfigUpgradeStrategyObservation.
func (in *ClusterConfigRkeConfigUpgradeStrategyObservation) DeepCopy() *ClusterConfigRkeConfigUpgradeStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigRkeConfigUpgradeStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigRkeConfigUpgradeStrategyParameters) DeepCopyInto(out *ClusterConfigRkeConfigUpgradeStrategyParameters) {
	*out = *in
	if in.Drain != nil {
		in, out := &in.Drain, &out.Drain
		*out = new(bool)
		**out = **in
	}
	if in.DrainInput != nil {
		in, out := &in.DrainInput, &out.DrainInput
		*out = make([]UpgradeStrategyDrainInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnavailableControlplane != nil {
		in, out := &in.MaxUnavailableControlplane, &out.MaxUnavailableControlplane
		*out = new(string)
		**out = **in
	}
	if in.MaxUnavailableWorker != nil {
		in, out := &in.MaxUnavailableWorker, &out.MaxUnavailableWorker
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigRkeConfigUpgradeStrategyParameters.
func (in *ClusterConfigRkeConfigUpgradeStrategyParameters) DeepCopy() *ClusterConfigRkeConfigUpgradeStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigRkeConfigUpgradeStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigScheduledClusterScanObservation) DeepCopyInto(out *ClusterConfigScheduledClusterScanObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigScheduledClusterScanObservation.
func (in *ClusterConfigScheduledClusterScanObservation) DeepCopy() *ClusterConfigScheduledClusterScanObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigScheduledClusterScanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigScheduledClusterScanParameters) DeepCopyInto(out *ClusterConfigScheduledClusterScanParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ScanConfig != nil {
		in, out := &in.ScanConfig, &out.ScanConfig
		*out = make([]ScheduledClusterScanScanConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScheduleConfig != nil {
		in, out := &in.ScheduleConfig, &out.ScheduleConfig
		*out = make([]ScheduledClusterScanScheduleConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigScheduledClusterScanParameters.
func (in *ClusterConfigScheduledClusterScanParameters) DeepCopy() *ClusterConfigScheduledClusterScanParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigScheduledClusterScanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMonitoringInputObservation) DeepCopyInto(out *ClusterMonitoringInputObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMonitoringInputObservation.
func (in *ClusterMonitoringInputObservation) DeepCopy() *ClusterMonitoringInputObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterMonitoringInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterMonitoringInputParameters) DeepCopyInto(out *ClusterMonitoringInputParameters) {
	*out = *in
	if in.Answers != nil {
		in, out := &in.Answers, &out.Answers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterMonitoringInputParameters.
func (in *ClusterMonitoringInputParameters) DeepCopy() *ClusterMonitoringInputParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterMonitoringInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.ClusterRegistrationToken != nil {
		in, out := &in.ClusterRegistrationToken, &out.ClusterRegistrationToken
		*out = make([]ClusterRegistrationTokenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultProjectID != nil {
		in, out := &in.DefaultProjectID, &out.DefaultProjectID
		*out = new(string)
		**out = **in
	}
	if in.EnableClusterIstio != nil {
		in, out := &in.EnableClusterIstio, &out.EnableClusterIstio
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IstioEnabled != nil {
		in, out := &in.IstioEnabled, &out.IstioEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SystemProjectID != nil {
		in, out := &in.SystemProjectID, &out.SystemProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AgentEnvVars != nil {
		in, out := &in.AgentEnvVars, &out.AgentEnvVars
		*out = make([]AgentEnvVarsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AksConfig != nil {
		in, out := &in.AksConfig, &out.AksConfig
		*out = make([]AksConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AksConfigV2 != nil {
		in, out := &in.AksConfigV2, &out.AksConfigV2
		*out = make([]AksConfigV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterAuthEndpoint != nil {
		in, out := &in.ClusterAuthEndpoint, &out.ClusterAuthEndpoint
		*out = make([]ClusterAuthEndpointParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterMonitoringInput != nil {
		in, out := &in.ClusterMonitoringInput, &out.ClusterMonitoringInput
		*out = make([]ClusterMonitoringInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterTemplateAnswers != nil {
		in, out := &in.ClusterTemplateAnswers, &out.ClusterTemplateAnswers
		*out = make([]ClusterTemplateAnswersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterTemplateID != nil {
		in, out := &in.ClusterTemplateID, &out.ClusterTemplateID
		*out = new(string)
		**out = **in
	}
	if in.ClusterTemplateQuestions != nil {
		in, out := &in.ClusterTemplateQuestions, &out.ClusterTemplateQuestions
		*out = make([]ClusterTemplateQuestionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterTemplateRevisionID != nil {
		in, out := &in.ClusterTemplateRevisionID, &out.ClusterTemplateRevisionID
		*out = new(string)
		**out = **in
	}
	if in.DefaultPodSecurityPolicyTemplateID != nil {
		in, out := &in.DefaultPodSecurityPolicyTemplateID, &out.DefaultPodSecurityPolicyTemplateID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DesiredAgentImage != nil {
		in, out := &in.DesiredAgentImage, &out.DesiredAgentImage
		*out = new(string)
		**out = **in
	}
	if in.DesiredAuthImage != nil {
		in, out := &in.DesiredAuthImage, &out.DesiredAuthImage
		*out = new(string)
		**out = **in
	}
	if in.DockerRootDir != nil {
		in, out := &in.DockerRootDir, &out.DockerRootDir
		*out = new(string)
		**out = **in
	}
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
	if in.EksConfig != nil {
		in, out := &in.EksConfig, &out.EksConfig
		*out = make([]EksConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EksConfigV2 != nil {
		in, out := &in.EksConfigV2, &out.EksConfigV2
		*out = make([]EksConfigV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableClusterAlerting != nil {
		in, out := &in.EnableClusterAlerting, &out.EnableClusterAlerting
		*out = new(bool)
		**out = **in
	}
	if in.EnableClusterMonitoring != nil {
		in, out := &in.EnableClusterMonitoring, &out.EnableClusterMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkPolicy != nil {
		in, out := &in.EnableNetworkPolicy, &out.EnableNetworkPolicy
		*out = new(bool)
		**out = **in
	}
	if in.FleetWorkspaceName != nil {
		in, out := &in.FleetWorkspaceName, &out.FleetWorkspaceName
		*out = new(string)
		**out = **in
	}
	if in.GkeConfig != nil {
		in, out := &in.GkeConfig, &out.GkeConfig
		*out = make([]GkeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GkeConfigV2 != nil {
		in, out := &in.GkeConfigV2, &out.GkeConfigV2
		*out = make([]GkeConfigV2Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.K3SConfig != nil {
		in, out := &in.K3SConfig, &out.K3SConfig
		*out = make([]K3SConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OkeConfig != nil {
		in, out := &in.OkeConfig, &out.OkeConfig
		*out = make([]OkeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rke2Config != nil {
		in, out := &in.Rke2Config, &out.Rke2Config
		*out = make([]Rke2ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RkeConfig != nil {
		in, out := &in.RkeConfig, &out.RkeConfig
		*out = make([]RkeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScheduledClusterScan != nil {
		in, out := &in.ScheduledClusterScan, &out.ScheduledClusterScan
		*out = make([]ScheduledClusterScanParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowsPreferedCluster != nil {
		in, out := &in.WindowsPreferedCluster, &out.WindowsPreferedCluster
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationTokenObservation) DeepCopyInto(out *ClusterRegistrationTokenObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InsecureCommand != nil {
		in, out := &in.InsecureCommand, &out.InsecureCommand
		*out = new(string)
		**out = **in
	}
	if in.InsecureNodeCommand != nil {
		in, out := &in.InsecureNodeCommand, &out.InsecureNodeCommand
		*out = new(string)
		**out = **in
	}
	if in.InsecureWindowsNodeCommand != nil {
		in, out := &in.InsecureWindowsNodeCommand, &out.InsecureWindowsNodeCommand
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ManifestURL != nil {
		in, out := &in.ManifestURL, &out.ManifestURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeCommand != nil {
		in, out := &in.NodeCommand, &out.NodeCommand
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.WindowsNodeCommand != nil {
		in, out := &in.WindowsNodeCommand, &out.WindowsNodeCommand
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationTokenObservation.
func (in *ClusterRegistrationTokenObservation) DeepCopy() *ClusterRegistrationTokenObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRegistrationTokenParameters) DeepCopyInto(out *ClusterRegistrationTokenParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRegistrationTokenParameters.
func (in *ClusterRegistrationTokenParameters) DeepCopy() *ClusterRegistrationTokenParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterRegistrationTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTemplateAnswersObservation) DeepCopyInto(out *ClusterTemplateAnswersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTemplateAnswersObservation.
func (in *ClusterTemplateAnswersObservation) DeepCopy() *ClusterTemplateAnswersObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterTemplateAnswersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTemplateAnswersParameters) DeepCopyInto(out *ClusterTemplateAnswersParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTemplateAnswersParameters.
func (in *ClusterTemplateAnswersParameters) DeepCopy() *ClusterTemplateAnswersParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterTemplateAnswersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTemplateQuestionsObservation) DeepCopyInto(out *ClusterTemplateQuestionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTemplateQuestionsObservation.
func (in *ClusterTemplateQuestionsObservation) DeepCopy() *ClusterTemplateQuestionsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterTemplateQuestionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterTemplateQuestionsParameters) DeepCopyInto(out *ClusterTemplateQuestionsParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterTemplateQuestionsParameters.
func (in *ClusterTemplateQuestionsParameters) DeepCopy() *ClusterTemplateQuestionsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterTemplateQuestionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.ImageType != nil {
		in, out := &in.ImageType, &out.ImageType
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]TaintsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.MaxBackup != nil {
		in, out := &in.MaxBackup, &out.MaxBackup
		*out = new(float64)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTargetConfigObservation) DeepCopyInto(out *CustomTargetConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTargetConfigObservation.
func (in *CustomTargetConfigObservation) DeepCopy() *CustomTargetConfigObservation {
	if in == nil {
		return nil
	}
	out := new(CustomTargetConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomTargetConfigParameters) DeepCopyInto(out *CustomTargetConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomTargetConfigParameters.
func (in *CustomTargetConfigParameters) DeepCopy() *CustomTargetConfigParameters {
	if in == nil {
		return nil
	}
	out := new(CustomTargetConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSLinearAutoscalerParamsObservation) DeepCopyInto(out *DNSLinearAutoscalerParamsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSLinearAutoscalerParamsObservation.
func (in *DNSLinearAutoscalerParamsObservation) DeepCopy() *DNSLinearAutoscalerParamsObservation {
	if in == nil {
		return nil
	}
	out := new(DNSLinearAutoscalerParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSLinearAutoscalerParamsParameters) DeepCopyInto(out *DNSLinearAutoscalerParamsParameters) {
	*out = *in
	if in.CoresPerReplica != nil {
		in, out := &in.CoresPerReplica, &out.CoresPerReplica
		*out = new(float64)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.NodesPerReplica != nil {
		in, out := &in.NodesPerReplica, &out.NodesPerReplica
		*out = new(float64)
		**out = **in
	}
	if in.PreventSinglePointFailure != nil {
		in, out := &in.PreventSinglePointFailure, &out.PreventSinglePointFailure
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSLinearAutoscalerParamsParameters.
func (in *DNSLinearAutoscalerParamsParameters) DeepCopy() *DNSLinearAutoscalerParamsParameters {
	if in == nil {
		return nil
	}
	out := new(DNSLinearAutoscalerParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNodelocalObservation) DeepCopyInto(out *DNSNodelocalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNodelocalObservation.
func (in *DNSNodelocalObservation) DeepCopy() *DNSNodelocalObservation {
	if in == nil {
		return nil
	}
	out := new(DNSNodelocalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSNodelocalParameters) DeepCopyInto(out *DNSNodelocalParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSNodelocalParameters.
func (in *DNSNodelocalParameters) DeepCopy() *DNSNodelocalParameters {
	if in == nil {
		return nil
	}
	out := new(DNSNodelocalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSObservation) DeepCopyInto(out *DNSObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSObservation.
func (in *DNSObservation) DeepCopy() *DNSObservation {
	if in == nil {
		return nil
	}
	out := new(DNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSParameters) DeepCopyInto(out *DNSParameters) {
	*out = *in
	if in.LinearAutoscalerParams != nil {
		in, out := &in.LinearAutoscalerParams, &out.LinearAutoscalerParams
		*out = make([]LinearAutoscalerParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Nodelocal != nil {
		in, out := &in.Nodelocal, &out.Nodelocal
		*out = make([]NodelocalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.ReverseCidrs != nil {
		in, out := &in.ReverseCidrs, &out.ReverseCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]TolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]UpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpstreamNameservers != nil {
		in, out := &in.UpstreamNameservers, &out.UpstreamNameservers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSParameters.
func (in *DNSParameters) DeepCopy() *DNSParameters {
	if in == nil {
		return nil
	}
	out := new(DNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTolerationsObservation) DeepCopyInto(out *DNSTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTolerationsObservation.
func (in *DNSTolerationsObservation) DeepCopy() *DNSTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(DNSTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSTolerationsParameters) DeepCopyInto(out *DNSTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSTolerationsParameters.
func (in *DNSTolerationsParameters) DeepCopy() *DNSTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(DNSTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSUpdateStrategyObservation) DeepCopyInto(out *DNSUpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSUpdateStrategyObservation.
func (in *DNSUpdateStrategyObservation) DeepCopy() *DNSUpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(DNSUpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSUpdateStrategyParameters) DeepCopyInto(out *DNSUpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]DNSUpdateStrategyRollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSUpdateStrategyParameters.
func (in *DNSUpdateStrategyParameters) DeepCopy() *DNSUpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(DNSUpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSUpdateStrategyRollingUpdateObservation) DeepCopyInto(out *DNSUpdateStrategyRollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSUpdateStrategyRollingUpdateObservation.
func (in *DNSUpdateStrategyRollingUpdateObservation) DeepCopy() *DNSUpdateStrategyRollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(DNSUpdateStrategyRollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSUpdateStrategyRollingUpdateParameters) DeepCopyInto(out *DNSUpdateStrategyRollingUpdateParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSUpdateStrategyRollingUpdateParameters.
func (in *DNSUpdateStrategyRollingUpdateParameters) DeepCopy() *DNSUpdateStrategyRollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(DNSUpdateStrategyRollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.ScsiControllerType != nil {
		in, out := &in.ScsiControllerType, &out.ScsiControllerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrainInputObservation) DeepCopyInto(out *DrainInputObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrainInputObservation.
func (in *DrainInputObservation) DeepCopy() *DrainInputObservation {
	if in == nil {
		return nil
	}
	out := new(DrainInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrainInputParameters) DeepCopyInto(out *DrainInputParameters) {
	*out = *in
	if in.DeleteLocalData != nil {
		in, out := &in.DeleteLocalData, &out.DeleteLocalData
		*out = new(bool)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDaemonSets != nil {
		in, out := &in.IgnoreDaemonSets, &out.IgnoreDaemonSets
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrainInputParameters.
func (in *DrainInputParameters) DeepCopy() *DrainInputParameters {
	if in == nil {
		return nil
	}
	out := new(DrainInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Driver) DeepCopyInto(out *Driver) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Driver.
func (in *Driver) DeepCopy() *Driver {
	if in == nil {
		return nil
	}
	out := new(Driver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Driver) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverList) DeepCopyInto(out *DriverList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Driver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverList.
func (in *DriverList) DeepCopy() *DriverList {
	if in == nil {
		return nil
	}
	out := new(DriverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DriverList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverObservation) DeepCopyInto(out *DriverObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverObservation.
func (in *DriverObservation) DeepCopy() *DriverObservation {
	if in == nil {
		return nil
	}
	out := new(DriverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverParameters) DeepCopyInto(out *DriverParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ActualURL != nil {
		in, out := &in.ActualURL, &out.ActualURL
		*out = new(string)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Builtin != nil {
		in, out := &in.Builtin, &out.Builtin
		*out = new(bool)
		**out = **in
	}
	if in.Checksum != nil {
		in, out := &in.Checksum, &out.Checksum
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UIURL != nil {
		in, out := &in.UIURL, &out.UIURL
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.WhitelistDomains != nil {
		in, out := &in.WhitelistDomains, &out.WhitelistDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverParameters.
func (in *DriverParameters) DeepCopy() *DriverParameters {
	if in == nil {
		return nil
	}
	out := new(DriverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverSpec) DeepCopyInto(out *DriverSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverSpec.
func (in *DriverSpec) DeepCopy() *DriverSpec {
	if in == nil {
		return nil
	}
	out := new(DriverSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DriverStatus) DeepCopyInto(out *DriverStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DriverStatus.
func (in *DriverStatus) DeepCopy() *DriverStatus {
	if in == nil {
		return nil
	}
	out := new(DriverStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcrCredentialPluginObservation) DeepCopyInto(out *EcrCredentialPluginObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcrCredentialPluginObservation.
func (in *EcrCredentialPluginObservation) DeepCopy() *EcrCredentialPluginObservation {
	if in == nil {
		return nil
	}
	out := new(EcrCredentialPluginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EcrCredentialPluginParameters) DeepCopyInto(out *EcrCredentialPluginParameters) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKeySecretRef != nil {
		in, out := &in.AwsSecretAccessKeySecretRef, &out.AwsSecretAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AwsSessionTokenSecretRef != nil {
		in, out := &in.AwsSessionTokenSecretRef, &out.AwsSessionTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EcrCredentialPluginParameters.
func (in *EcrCredentialPluginParameters) DeepCopy() *EcrCredentialPluginParameters {
	if in == nil {
		return nil
	}
	out := new(EcrCredentialPluginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksConfigObservation) DeepCopyInto(out *EksConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksConfigObservation.
func (in *EksConfigObservation) DeepCopy() *EksConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EksConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksConfigParameters) DeepCopyInto(out *EksConfigParameters) {
	*out = *in
	if in.AMI != nil {
		in, out := &in.AMI, &out.AMI
		*out = new(string)
		**out = **in
	}
	out.AccessKeySecretRef = in.AccessKeySecretRef
	if in.AssociateWorkerNodePublicIP != nil {
		in, out := &in.AssociateWorkerNodePublicIP, &out.AssociateWorkerNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DesiredNodes != nil {
		in, out := &in.DesiredNodes, &out.DesiredNodes
		*out = new(float64)
		**out = **in
	}
	if in.EBSEncryption != nil {
		in, out := &in.EBSEncryption, &out.EBSEncryption
		*out = new(bool)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.KeyPairName != nil {
		in, out := &in.KeyPairName, &out.KeyPairName
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.MaximumNodes != nil {
		in, out := &in.MaximumNodes, &out.MaximumNodes
		*out = new(float64)
		**out = **in
	}
	if in.MinimumNodes != nil {
		in, out := &in.MinimumNodes, &out.MinimumNodes
		*out = new(float64)
		**out = **in
	}
	if in.NodeVolumeSize != nil {
		in, out := &in.NodeVolumeSize, &out.NodeVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	out.SecretKeySecretRef = in.SecretKeySecretRef
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceRole != nil {
		in, out := &in.ServiceRole, &out.ServiceRole
		*out = new(string)
		**out = **in
	}
	if in.SessionTokenSecretRef != nil {
		in, out := &in.SessionTokenSecretRef, &out.SessionTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetwork != nil {
		in, out := &in.VirtualNetwork, &out.VirtualNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksConfigParameters.
func (in *EksConfigParameters) DeepCopy() *EksConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EksConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksConfigV2Observation) DeepCopyInto(out *EksConfigV2Observation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksConfigV2Observation.
func (in *EksConfigV2Observation) DeepCopy() *EksConfigV2Observation {
	if in == nil {
		return nil
	}
	out := new(EksConfigV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EksConfigV2Parameters) DeepCopyInto(out *EksConfigV2Parameters) {
	*out = *in
	if in.CloudCredentialID != nil {
		in, out := &in.CloudCredentialID, &out.CloudCredentialID
		*out = new(string)
		**out = **in
	}
	if in.Imported != nil {
		in, out := &in.Imported, &out.Imported
		*out = new(bool)
		**out = **in
	}
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LoggingTypes != nil {
		in, out := &in.LoggingTypes, &out.LoggingTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeGroups != nil {
		in, out := &in.NodeGroups, &out.NodeGroups
		*out = make([]NodeGroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateAccess != nil {
		in, out := &in.PrivateAccess, &out.PrivateAccess
		*out = new(bool)
		**out = **in
	}
	if in.PublicAccess != nil {
		in, out := &in.PublicAccess, &out.PublicAccess
		*out = new(bool)
		**out = **in
	}
	if in.PublicAccessSources != nil {
		in, out := &in.PublicAccessSources, &out.PublicAccessSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretsEncryption != nil {
		in, out := &in.SecretsEncryption, &out.SecretsEncryption
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceRole != nil {
		in, out := &in.ServiceRole, &out.ServiceRole
		*out = new(string)
		**out = **in
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EksConfigV2Parameters.
func (in *EksConfigV2Parameters) DeepCopy() *EksConfigV2Parameters {
	if in == nil {
		return nil
	}
	out := new(EksConfigV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigObservation) DeepCopyInto(out *ElasticsearchConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigObservation.
func (in *ElasticsearchConfigObservation) DeepCopy() *ElasticsearchConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConfigParameters) DeepCopyInto(out *ElasticsearchConfigParameters) {
	*out = *in
	if in.AuthPasswordSecretRef != nil {
		in, out := &in.AuthPasswordSecretRef, &out.AuthPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AuthUsernameSecretRef != nil {
		in, out := &in.AuthUsernameSecretRef, &out.AuthUsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeyPassSecretRef != nil {
		in, out := &in.ClientKeyPassSecretRef, &out.ClientKeyPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DateFormat != nil {
		in, out := &in.DateFormat, &out.DateFormat
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.IndexPrefix != nil {
		in, out := &in.IndexPrefix, &out.IndexPrefix
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.SSLVersion != nil {
		in, out := &in.SSLVersion, &out.SSLVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConfigParameters.
func (in *ElasticsearchConfigParameters) DeepCopy() *ElasticsearchConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupConfigObservation) DeepCopyInto(out *EtcdBackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupConfigObservation.
func (in *EtcdBackupConfigObservation) DeepCopy() *EtcdBackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdBackupConfigParameters) DeepCopyInto(out *EtcdBackupConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IntervalHours != nil {
		in, out := &in.IntervalHours, &out.IntervalHours
		*out = new(float64)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
	if in.S3BackupConfig != nil {
		in, out := &in.S3BackupConfig, &out.S3BackupConfig
		*out = make([]BackupConfigS3BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SafeTimestamp != nil {
		in, out := &in.SafeTimestamp, &out.SafeTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdBackupConfigParameters.
func (in *EtcdBackupConfigParameters) DeepCopy() *EtcdBackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdBackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdObservation) DeepCopyInto(out *EtcdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdObservation.
func (in *EtcdObservation) DeepCopy() *EtcdObservation {
	if in == nil {
		return nil
	}
	out := new(EtcdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EtcdParameters) DeepCopyInto(out *EtcdParameters) {
	*out = *in
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = make([]BackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACert != nil {
		in, out := &in.CACert, &out.CACert
		*out = new(string)
		**out = **in
	}
	if in.CertSecretRef != nil {
		in, out := &in.CertSecretRef, &out.CertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(string)
		**out = **in
	}
	if in.ExternalUrls != nil {
		in, out := &in.ExternalUrls, &out.ExternalUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GID != nil {
		in, out := &in.GID, &out.GID
		*out = new(float64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.KeySecretRef != nil {
		in, out := &in.KeySecretRef, &out.KeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(string)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EtcdParameters.
func (in *EtcdParameters) DeepCopy() *EtcdParameters {
	if in == nil {
		return nil
	}
	out := new(EtcdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRateLimitObservation) DeepCopyInto(out *EventRateLimitObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRateLimitObservation.
func (in *EventRateLimitObservation) DeepCopy() *EventRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(EventRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRateLimitParameters) DeepCopyInto(out *EventRateLimitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRateLimitParameters.
func (in *EventRateLimitParameters) DeepCopy() *EventRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(EventRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRuleObservation) DeepCopyInto(out *EventRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRuleObservation.
func (in *EventRuleObservation) DeepCopy() *EventRuleObservation {
	if in == nil {
		return nil
	}
	out := new(EventRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EventRuleParameters) DeepCopyInto(out *EventRuleParameters) {
	*out = *in
	if in.EventType != nil {
		in, out := &in.EventType, &out.EventType
		*out = new(string)
		**out = **in
	}
	if in.ResourceKind != nil {
		in, out := &in.ResourceKind, &out.ResourceKind
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EventRuleParameters.
func (in *EventRuleParameters) DeepCopy() *EventRuleParameters {
	if in == nil {
		return nil
	}
	out := new(EventRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlannelNetworkProviderObservation) DeepCopyInto(out *FlannelNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlannelNetworkProviderObservation.
func (in *FlannelNetworkProviderObservation) DeepCopy() *FlannelNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(FlannelNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlannelNetworkProviderParameters) DeepCopyInto(out *FlannelNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlannelNetworkProviderParameters.
func (in *FlannelNetworkProviderParameters) DeepCopy() *FlannelNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(FlannelNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentServersObservation) DeepCopyInto(out *FluentServersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentServersObservation.
func (in *FluentServersObservation) DeepCopy() *FluentServersObservation {
	if in == nil {
		return nil
	}
	out := new(FluentServersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentServersParameters) DeepCopyInto(out *FluentServersParameters) {
	*out = *in
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SharedKeySecretRef != nil {
		in, out := &in.SharedKeySecretRef, &out.SharedKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Standby != nil {
		in, out := &in.Standby, &out.Standby
		*out = new(bool)
		**out = **in
	}
	if in.UsernameSecretRef != nil {
		in, out := &in.UsernameSecretRef, &out.UsernameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentServersParameters.
func (in *FluentServersParameters) DeepCopy() *FluentServersParameters {
	if in == nil {
		return nil
	}
	out := new(FluentServersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentdConfigObservation) DeepCopyInto(out *FluentdConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentdConfigObservation.
func (in *FluentdConfigObservation) DeepCopy() *FluentdConfigObservation {
	if in == nil {
		return nil
	}
	out := new(FluentdConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentdConfigParameters) DeepCopyInto(out *FluentdConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.FluentServers != nil {
		in, out := &in.FluentServers, &out.FluentServers
		*out = make([]FluentServersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentdConfigParameters.
func (in *FluentdConfigParameters) DeepCopy() *FluentdConfigParameters {
	if in == nil {
		return nil
	}
	out := new(FluentdConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigObservation) DeepCopyInto(out *GkeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigObservation.
func (in *GkeConfigObservation) DeepCopy() *GkeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(GkeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigParameters) DeepCopyInto(out *GkeConfigParameters) {
	*out = *in
	if in.ClusterIPv4Cidr != nil {
		in, out := &in.ClusterIPv4Cidr, &out.ClusterIPv4Cidr
		*out = new(string)
		**out = **in
	}
	out.CredentialSecretRef = in.CredentialSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.EnableAlphaFeature != nil {
		in, out := &in.EnableAlphaFeature, &out.EnableAlphaFeature
		*out = new(bool)
		**out = **in
	}
	if in.EnableAutoRepair != nil {
		in, out := &in.EnableAutoRepair, &out.EnableAutoRepair
		*out = new(bool)
		**out = **in
	}
	if in.EnableAutoUpgrade != nil {
		in, out := &in.EnableAutoUpgrade, &out.EnableAutoUpgrade
		*out = new(bool)
		**out = **in
	}
	if in.EnableHTTPLoadBalancing != nil {
		in, out := &in.EnableHTTPLoadBalancing, &out.EnableHTTPLoadBalancing
		*out = new(bool)
		**out = **in
	}
	if in.EnableHorizontalPodAutoscaling != nil {
		in, out := &in.EnableHorizontalPodAutoscaling, &out.EnableHorizontalPodAutoscaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableKubernetesDashboard != nil {
		in, out := &in.EnableKubernetesDashboard, &out.EnableKubernetesDashboard
		*out = new(bool)
		**out = **in
	}
	if in.EnableLegacyAbac != nil {
		in, out := &in.EnableLegacyAbac, &out.EnableLegacyAbac
		*out = new(bool)
		**out = **in
	}
	if in.EnableMasterAuthorizedNetwork != nil {
		in, out := &in.EnableMasterAuthorizedNetwork, &out.EnableMasterAuthorizedNetwork
		*out = new(bool)
		**out = **in
	}
	if in.EnableNetworkPolicyConfig != nil {
		in, out := &in.EnableNetworkPolicyConfig, &out.EnableNetworkPolicyConfig
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodepoolAutoscaling != nil {
		in, out := &in.EnableNodepoolAutoscaling, &out.EnableNodepoolAutoscaling
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateEndpoint != nil {
		in, out := &in.EnablePrivateEndpoint, &out.EnablePrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateNodes != nil {
		in, out := &in.EnablePrivateNodes, &out.EnablePrivateNodes
		*out = new(bool)
		**out = **in
	}
	if in.EnableStackdriverLogging != nil {
		in, out := &in.EnableStackdriverLogging, &out.EnableStackdriverLogging
		*out = new(bool)
		**out = **in
	}
	if in.EnableStackdriverMonitoring != nil {
		in, out := &in.EnableStackdriverMonitoring, &out.EnableStackdriverMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.IPPolicyClusterIPv4CidrBlock != nil {
		in, out := &in.IPPolicyClusterIPv4CidrBlock, &out.IPPolicyClusterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPPolicyClusterSecondaryRangeName != nil {
		in, out := &in.IPPolicyClusterSecondaryRangeName, &out.IPPolicyClusterSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.IPPolicyCreateSubnetwork != nil {
		in, out := &in.IPPolicyCreateSubnetwork, &out.IPPolicyCreateSubnetwork
		*out = new(bool)
		**out = **in
	}
	if in.IPPolicyNodeIPv4CidrBlock != nil {
		in, out := &in.IPPolicyNodeIPv4CidrBlock, &out.IPPolicyNodeIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPPolicyServicesIPv4CidrBlock != nil {
		in, out := &in.IPPolicyServicesIPv4CidrBlock, &out.IPPolicyServicesIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPPolicyServicesSecondaryRangeName != nil {
		in, out := &in.IPPolicyServicesSecondaryRangeName, &out.IPPolicyServicesSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.IPPolicySubnetworkName != nil {
		in, out := &in.IPPolicySubnetworkName, &out.IPPolicySubnetworkName
		*out = new(string)
		**out = **in
	}
	if in.ImageType != nil {
		in, out := &in.ImageType, &out.ImageType
		*out = new(string)
		**out = **in
	}
	if in.IssueClientCertificate != nil {
		in, out := &in.IssueClientCertificate, &out.IssueClientCertificate
		*out = new(bool)
		**out = **in
	}
	if in.KubernetesDashboard != nil {
		in, out := &in.KubernetesDashboard, &out.KubernetesDashboard
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LocalSsdCount != nil {
		in, out := &in.LocalSsdCount, &out.LocalSsdCount
		*out = new(float64)
		**out = **in
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.MasterAuthorizedNetworkCidrBlocks != nil {
		in, out := &in.MasterAuthorizedNetworkCidrBlocks, &out.MasterAuthorizedNetworkCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MasterIPv4CidrBlock != nil {
		in, out := &in.MasterIPv4CidrBlock, &out.MasterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.MasterVersion != nil {
		in, out := &in.MasterVersion, &out.MasterVersion
		*out = new(string)
		**out = **in
	}
	if in.MaxNodeCount != nil {
		in, out := &in.MaxNodeCount, &out.MaxNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.MinNodeCount != nil {
		in, out := &in.MinNodeCount, &out.MinNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(float64)
		**out = **in
	}
	if in.NodePool != nil {
		in, out := &in.NodePool, &out.NodePool
		*out = new(string)
		**out = **in
	}
	if in.NodeVersion != nil {
		in, out := &in.NodeVersion, &out.NodeVersion
		*out = new(string)
		**out = **in
	}
	if in.OauthScopes != nil {
		in, out := &in.OauthScopes, &out.OauthScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceLabels != nil {
		in, out := &in.ResourceLabels, &out.ResourceLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = new(string)
		**out = **in
	}
	if in.SubNetwork != nil {
		in, out := &in.SubNetwork, &out.SubNetwork
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UseIPAliases != nil {
		in, out := &in.UseIPAliases, &out.UseIPAliases
		*out = new(bool)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigParameters.
func (in *GkeConfigParameters) DeepCopy() *GkeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(GkeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigV2NodePoolsObservation) DeepCopyInto(out *GkeConfigV2NodePoolsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigV2NodePoolsObservation.
func (in *GkeConfigV2NodePoolsObservation) DeepCopy() *GkeConfigV2NodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(GkeConfigV2NodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigV2NodePoolsParameters) DeepCopyInto(out *GkeConfigV2NodePoolsParameters) {
	*out = *in
	if in.Autoscaling != nil {
		in, out := &in.Autoscaling, &out.Autoscaling
		*out = make([]AutoscalingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitialNodeCount != nil {
		in, out := &in.InitialNodeCount, &out.InitialNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.Management != nil {
		in, out := &in.Management, &out.Management
		*out = make([]ManagementParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxPodsConstraint != nil {
		in, out := &in.MaxPodsConstraint, &out.MaxPodsConstraint
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigV2NodePoolsParameters.
func (in *GkeConfigV2NodePoolsParameters) DeepCopy() *GkeConfigV2NodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(GkeConfigV2NodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigV2Observation) DeepCopyInto(out *GkeConfigV2Observation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigV2Observation.
func (in *GkeConfigV2Observation) DeepCopy() *GkeConfigV2Observation {
	if in == nil {
		return nil
	}
	out := new(GkeConfigV2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GkeConfigV2Parameters) DeepCopyInto(out *GkeConfigV2Parameters) {
	*out = *in
	if in.ClusterAddons != nil {
		in, out := &in.ClusterAddons, &out.ClusterAddons
		*out = make([]ClusterAddonsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterIPv4CidrBlock != nil {
		in, out := &in.ClusterIPv4CidrBlock, &out.ClusterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableKubernetesAlpha != nil {
		in, out := &in.EnableKubernetesAlpha, &out.EnableKubernetesAlpha
		*out = new(bool)
		**out = **in
	}
	out.GoogleCredentialSecretSecretRef = in.GoogleCredentialSecretSecretRef
	if in.IPAllocationPolicy != nil {
		in, out := &in.IPAllocationPolicy, &out.IPAllocationPolicy
		*out = make([]IPAllocationPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Imported != nil {
		in, out := &in.Imported, &out.Imported
		*out = new(bool)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LoggingService != nil {
		in, out := &in.LoggingService, &out.LoggingService
		*out = new(string)
		**out = **in
	}
	if in.MaintenanceWindow != nil {
		in, out := &in.MaintenanceWindow, &out.MaintenanceWindow
		*out = new(string)
		**out = **in
	}
	if in.MasterAuthorizedNetworksConfig != nil {
		in, out := &in.MasterAuthorizedNetworksConfig, &out.MasterAuthorizedNetworksConfig
		*out = make([]MasterAuthorizedNetworksConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitoringService != nil {
		in, out := &in.MonitoringService, &out.MonitoringService
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicyEnabled != nil {
		in, out := &in.NetworkPolicyEnabled, &out.NetworkPolicyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NodePools != nil {
		in, out := &in.NodePools, &out.NodePools
		*out = make([]GkeConfigV2NodePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateClusterConfig != nil {
		in, out := &in.PrivateClusterConfig, &out.PrivateClusterConfig
		*out = make([]PrivateClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GkeConfigV2Parameters.
func (in *GkeConfigV2Parameters) DeepCopy() *GkeConfigV2Parameters {
	if in == nil {
		return nil
	}
	out := new(GkeConfigV2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalObservation) DeepCopyInto(out *GlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalObservation.
func (in *GlobalObservation) DeepCopy() *GlobalObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalParameters) DeepCopyInto(out *GlobalParameters) {
	*out = *in
	if in.DisableSecurityGroupIngress != nil {
		in, out := &in.DisableSecurityGroupIngress, &out.DisableSecurityGroupIngress
		*out = new(bool)
		**out = **in
	}
	if in.DisableStrictZoneCheck != nil {
		in, out := &in.DisableStrictZoneCheck, &out.DisableStrictZoneCheck
		*out = new(bool)
		**out = **in
	}
	if in.ELBSecurityGroup != nil {
		in, out := &in.ELBSecurityGroup, &out.ELBSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterID != nil {
		in, out := &in.KubernetesClusterID, &out.KubernetesClusterID
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterTag != nil {
		in, out := &in.KubernetesClusterTag, &out.KubernetesClusterTag
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalParameters.
func (in *GlobalParameters) DeepCopy() *GlobalParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAllocationPolicyObservation) DeepCopyInto(out *IPAllocationPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAllocationPolicyObservation.
func (in *IPAllocationPolicyObservation) DeepCopy() *IPAllocationPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(IPAllocationPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPAllocationPolicyParameters) DeepCopyInto(out *IPAllocationPolicyParameters) {
	*out = *in
	if in.ClusterIPv4CidrBlock != nil {
		in, out := &in.ClusterIPv4CidrBlock, &out.ClusterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ClusterSecondaryRangeName != nil {
		in, out := &in.ClusterSecondaryRangeName, &out.ClusterSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.CreateSubnetwork != nil {
		in, out := &in.CreateSubnetwork, &out.CreateSubnetwork
		*out = new(bool)
		**out = **in
	}
	if in.NodeIPv4CidrBlock != nil {
		in, out := &in.NodeIPv4CidrBlock, &out.NodeIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ServicesIPv4CidrBlock != nil {
		in, out := &in.ServicesIPv4CidrBlock, &out.ServicesIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ServicesSecondaryRangeName != nil {
		in, out := &in.ServicesSecondaryRangeName, &out.ServicesSecondaryRangeName
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkName != nil {
		in, out := &in.SubnetworkName, &out.SubnetworkName
		*out = new(string)
		**out = **in
	}
	if in.UseIPAliases != nil {
		in, out := &in.UseIPAliases, &out.UseIPAliases
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPAllocationPolicyParameters.
func (in *IPAllocationPolicyParameters) DeepCopy() *IPAllocationPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(IPAllocationPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressObservation) DeepCopyInto(out *IngressObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressObservation.
func (in *IngressObservation) DeepCopy() *IngressObservation {
	if in == nil {
		return nil
	}
	out := new(IngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressParameters) DeepCopyInto(out *IngressParameters) {
	*out = *in
	if in.DNSPolicy != nil {
		in, out := &in.DNSPolicy, &out.DNSPolicy
		*out = new(string)
		**out = **in
	}
	if in.DefaultBackend != nil {
		in, out := &in.DefaultBackend, &out.DefaultBackend
		*out = new(bool)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]IngressTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]IngressUpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressParameters.
func (in *IngressParameters) DeepCopy() *IngressParameters {
	if in == nil {
		return nil
	}
	out := new(IngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressTolerationsObservation) DeepCopyInto(out *IngressTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressTolerationsObservation.
func (in *IngressTolerationsObservation) DeepCopy() *IngressTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(IngressTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressTolerationsParameters) DeepCopyInto(out *IngressTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressTolerationsParameters.
func (in *IngressTolerationsParameters) DeepCopy() *IngressTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(IngressTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressUpdateStrategyObservation) DeepCopyInto(out *IngressUpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressUpdateStrategyObservation.
func (in *IngressUpdateStrategyObservation) DeepCopy() *IngressUpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(IngressUpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressUpdateStrategyParameters) DeepCopyInto(out *IngressUpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]UpdateStrategyRollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressUpdateStrategyParameters.
func (in *IngressUpdateStrategyParameters) DeepCopy() *IngressUpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(IngressUpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressUpdateStrategyRollingUpdateObservation) DeepCopyInto(out *IngressUpdateStrategyRollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressUpdateStrategyRollingUpdateObservation.
func (in *IngressUpdateStrategyRollingUpdateObservation) DeepCopy() *IngressUpdateStrategyRollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(IngressUpdateStrategyRollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressUpdateStrategyRollingUpdateParameters) DeepCopyInto(out *IngressUpdateStrategyRollingUpdateParameters) {
	*out = *in
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressUpdateStrategyRollingUpdateParameters.
func (in *IngressUpdateStrategyRollingUpdateParameters) DeepCopy() *IngressUpdateStrategyRollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(IngressUpdateStrategyRollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K3SConfigObservation) DeepCopyInto(out *K3SConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K3SConfigObservation.
func (in *K3SConfigObservation) DeepCopy() *K3SConfigObservation {
	if in == nil {
		return nil
	}
	out := new(K3SConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K3SConfigParameters) DeepCopyInto(out *K3SConfigParameters) {
	*out = *in
	if in.UpgradeStrategy != nil {
		in, out := &in.UpgradeStrategy, &out.UpgradeStrategy
		*out = make([]UpgradeStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K3SConfigParameters.
func (in *K3SConfigParameters) DeepCopy() *K3SConfigParameters {
	if in == nil {
		return nil
	}
	out := new(K3SConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConfigObservation) DeepCopyInto(out *KafkaConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConfigObservation.
func (in *KafkaConfigObservation) DeepCopy() *KafkaConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaConfigParameters) DeepCopyInto(out *KafkaConfigParameters) {
	*out = *in
	if in.BrokerEndpoints != nil {
		in, out := &in.BrokerEndpoints, &out.BrokerEndpoints
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.ZookeeperEndpoint != nil {
		in, out := &in.ZookeeperEndpoint, &out.ZookeeperEndpoint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaConfigParameters.
func (in *KafkaConfigParameters) DeepCopy() *KafkaConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIAuditLogObservation) DeepCopyInto(out *KubeAPIAuditLogObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIAuditLogObservation.
func (in *KubeAPIAuditLogObservation) DeepCopy() *KubeAPIAuditLogObservation {
	if in == nil {
		return nil
	}
	out := new(KubeAPIAuditLogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIAuditLogParameters) DeepCopyInto(out *KubeAPIAuditLogParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]AuditLogConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIAuditLogParameters.
func (in *KubeAPIAuditLogParameters) DeepCopy() *KubeAPIAuditLogParameters {
	if in == nil {
		return nil
	}
	out := new(KubeAPIAuditLogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIEventRateLimitObservation) DeepCopyInto(out *KubeAPIEventRateLimitObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIEventRateLimitObservation.
func (in *KubeAPIEventRateLimitObservation) DeepCopy() *KubeAPIEventRateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(KubeAPIEventRateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIEventRateLimitParameters) DeepCopyInto(out *KubeAPIEventRateLimitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIEventRateLimitParameters.
func (in *KubeAPIEventRateLimitParameters) DeepCopy() *KubeAPIEventRateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(KubeAPIEventRateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIObservation) DeepCopyInto(out *KubeAPIObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIObservation.
func (in *KubeAPIObservation) DeepCopy() *KubeAPIObservation {
	if in == nil {
		return nil
	}
	out := new(KubeAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPIParameters) DeepCopyInto(out *KubeAPIParameters) {
	*out = *in
	if in.AdmissionConfiguration != nil {
		in, out := &in.AdmissionConfiguration, &out.AdmissionConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AlwaysPullImages != nil {
		in, out := &in.AlwaysPullImages, &out.AlwaysPullImages
		*out = new(bool)
		**out = **in
	}
	if in.AuditLog != nil {
		in, out := &in.AuditLog, &out.AuditLog
		*out = make([]AuditLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventRateLimit != nil {
		in, out := &in.EventRateLimit, &out.EventRateLimit
		*out = make([]EventRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.PodSecurityPolicy != nil {
		in, out := &in.PodSecurityPolicy, &out.PodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SecretsEncryptionConfig != nil {
		in, out := &in.SecretsEncryptionConfig, &out.SecretsEncryptionConfig
		*out = make([]SecretsEncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
	if in.ServiceNodePortRange != nil {
		in, out := &in.ServiceNodePortRange, &out.ServiceNodePortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPIParameters.
func (in *KubeAPIParameters) DeepCopy() *KubeAPIParameters {
	if in == nil {
		return nil
	}
	out := new(KubeAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPISecretsEncryptionConfigObservation) DeepCopyInto(out *KubeAPISecretsEncryptionConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPISecretsEncryptionConfigObservation.
func (in *KubeAPISecretsEncryptionConfigObservation) DeepCopy() *KubeAPISecretsEncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(KubeAPISecretsEncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeAPISecretsEncryptionConfigParameters) DeepCopyInto(out *KubeAPISecretsEncryptionConfigParameters) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeAPISecretsEncryptionConfigParameters.
func (in *KubeAPISecretsEncryptionConfigParameters) DeepCopy() *KubeAPISecretsEncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(KubeAPISecretsEncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeControllerObservation) DeepCopyInto(out *KubeControllerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeControllerObservation.
func (in *KubeControllerObservation) DeepCopy() *KubeControllerObservation {
	if in == nil {
		return nil
	}
	out := new(KubeControllerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeControllerParameters) DeepCopyInto(out *KubeControllerParameters) {
	*out = *in
	if in.ClusterCidr != nil {
		in, out := &in.ClusterCidr, &out.ClusterCidr
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeControllerParameters.
func (in *KubeControllerParameters) DeepCopy() *KubeControllerParameters {
	if in == nil {
		return nil
	}
	out := new(KubeControllerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletObservation) DeepCopyInto(out *KubeletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletObservation.
func (in *KubeletObservation) DeepCopy() *KubeletObservation {
	if in == nil {
		return nil
	}
	out := new(KubeletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeletParameters) DeepCopyInto(out *KubeletParameters) {
	*out = *in
	if in.ClusterDNSServer != nil {
		in, out := &in.ClusterDNSServer, &out.ClusterDNSServer
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.GenerateServingCertificate != nil {
		in, out := &in.GenerateServingCertificate, &out.GenerateServingCertificate
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InfraContainerImage != nil {
		in, out := &in.InfraContainerImage, &out.InfraContainerImage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeletParameters.
func (in *KubeletParameters) DeepCopy() *KubeletParameters {
	if in == nil {
		return nil
	}
	out := new(KubeletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeproxyObservation) DeepCopyInto(out *KubeproxyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeproxyObservation.
func (in *KubeproxyObservation) DeepCopy() *KubeproxyObservation {
	if in == nil {
		return nil
	}
	out := new(KubeproxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeproxyParameters) DeepCopyInto(out *KubeproxyParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeproxyParameters.
func (in *KubeproxyParameters) DeepCopy() *KubeproxyParameters {
	if in == nil {
		return nil
	}
	out := new(KubeproxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateObservation) DeepCopyInto(out *LaunchTemplateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateObservation.
func (in *LaunchTemplateObservation) DeepCopy() *LaunchTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchTemplateParameters) DeepCopyInto(out *LaunchTemplateParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchTemplateParameters.
func (in *LaunchTemplateParameters) DeepCopy() *LaunchTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinearAutoscalerParamsObservation) DeepCopyInto(out *LinearAutoscalerParamsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinearAutoscalerParamsObservation.
func (in *LinearAutoscalerParamsObservation) DeepCopy() *LinearAutoscalerParamsObservation {
	if in == nil {
		return nil
	}
	out := new(LinearAutoscalerParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinearAutoscalerParamsParameters) DeepCopyInto(out *LinearAutoscalerParamsParameters) {
	*out = *in
	if in.CoresPerReplica != nil {
		in, out := &in.CoresPerReplica, &out.CoresPerReplica
		*out = new(float64)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.NodesPerReplica != nil {
		in, out := &in.NodesPerReplica, &out.NodesPerReplica
		*out = new(float64)
		**out = **in
	}
	if in.PreventSinglePointFailure != nil {
		in, out := &in.PreventSinglePointFailure, &out.PreventSinglePointFailure
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinearAutoscalerParamsParameters.
func (in *LinearAutoscalerParamsParameters) DeepCopy() *LinearAutoscalerParamsParameters {
	if in == nil {
		return nil
	}
	out := new(LinearAutoscalerParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerObservation) DeepCopyInto(out *LoadBalancerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerObservation.
func (in *LoadBalancerObservation) DeepCopy() *LoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerParameters) DeepCopyInto(out *LoadBalancerParameters) {
	*out = *in
	if in.CreateMonitor != nil {
		in, out := &in.CreateMonitor, &out.CreateMonitor
		*out = new(bool)
		**out = **in
	}
	if in.FloatingNetworkID != nil {
		in, out := &in.FloatingNetworkID, &out.FloatingNetworkID
		*out = new(string)
		**out = **in
	}
	if in.LBMethod != nil {
		in, out := &in.LBMethod, &out.LBMethod
		*out = new(string)
		**out = **in
	}
	if in.LBProvider != nil {
		in, out := &in.LBProvider, &out.LBProvider
		*out = new(string)
		**out = **in
	}
	if in.LBVersion != nil {
		in, out := &in.LBVersion, &out.LBVersion
		*out = new(string)
		**out = **in
	}
	if in.ManageSecurityGroups != nil {
		in, out := &in.ManageSecurityGroups, &out.ManageSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.MonitorDelay != nil {
		in, out := &in.MonitorDelay, &out.MonitorDelay
		*out = new(string)
		**out = **in
	}
	if in.MonitorMaxRetries != nil {
		in, out := &in.MonitorMaxRetries, &out.MonitorMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MonitorTimeout != nil {
		in, out := &in.MonitorTimeout, &out.MonitorTimeout
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UseOctavia != nil {
		in, out := &in.UseOctavia, &out.UseOctavia
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerParameters.
func (in *LoadBalancerParameters) DeepCopy() *LoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Logging) DeepCopyInto(out *Logging) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Logging.
func (in *Logging) DeepCopy() *Logging {
	if in == nil {
		return nil
	}
	out := new(Logging)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Logging) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingList) DeepCopyInto(out *LoggingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Logging, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingList.
func (in *LoggingList) DeepCopy() *LoggingList {
	if in == nil {
		return nil
	}
	out := new(LoggingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoggingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingObservation) DeepCopyInto(out *LoggingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingObservation.
func (in *LoggingObservation) DeepCopy() *LoggingObservation {
	if in == nil {
		return nil
	}
	out := new(LoggingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingParameters) DeepCopyInto(out *LoggingParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomTargetConfig != nil {
		in, out := &in.CustomTargetConfig, &out.CustomTargetConfig
		*out = make([]CustomTargetConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConfig != nil {
		in, out := &in.ElasticsearchConfig, &out.ElasticsearchConfig
		*out = make([]ElasticsearchConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableJSONParsing != nil {
		in, out := &in.EnableJSONParsing, &out.EnableJSONParsing
		*out = new(bool)
		**out = **in
	}
	if in.FluentdConfig != nil {
		in, out := &in.FluentdConfig, &out.FluentdConfig
		*out = make([]FluentdConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaConfig != nil {
		in, out := &in.KafkaConfig, &out.KafkaConfig
		*out = make([]KafkaConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.OutputFlushInterval != nil {
		in, out := &in.OutputFlushInterval, &out.OutputFlushInterval
		*out = new(float64)
		**out = **in
	}
	if in.OutputTags != nil {
		in, out := &in.OutputTags, &out.OutputTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SplunkConfig != nil {
		in, out := &in.SplunkConfig, &out.SplunkConfig
		*out = make([]SplunkConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SyslogConfig != nil {
		in, out := &in.SyslogConfig, &out.SyslogConfig
		*out = make([]SyslogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingParameters.
func (in *LoggingParameters) DeepCopy() *LoggingParameters {
	if in == nil {
		return nil
	}
	out := new(LoggingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingSpec) DeepCopyInto(out *LoggingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingSpec.
func (in *LoggingSpec) DeepCopy() *LoggingSpec {
	if in == nil {
		return nil
	}
	out := new(LoggingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingStatus) DeepCopyInto(out *LoggingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingStatus.
func (in *LoggingStatus) DeepCopy() *LoggingStatus {
	if in == nil {
		return nil
	}
	out := new(LoggingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementObservation) DeepCopyInto(out *ManagementObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementObservation.
func (in *ManagementObservation) DeepCopy() *ManagementObservation {
	if in == nil {
		return nil
	}
	out := new(ManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementParameters) DeepCopyInto(out *ManagementParameters) {
	*out = *in
	if in.AutoRepair != nil {
		in, out := &in.AutoRepair, &out.AutoRepair
		*out = new(bool)
		**out = **in
	}
	if in.AutoUpgrade != nil {
		in, out := &in.AutoUpgrade, &out.AutoUpgrade
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementParameters.
func (in *ManagementParameters) DeepCopy() *ManagementParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterAuthorizedNetworksConfigObservation) DeepCopyInto(out *MasterAuthorizedNetworksConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterAuthorizedNetworksConfigObservation.
func (in *MasterAuthorizedNetworksConfigObservation) DeepCopy() *MasterAuthorizedNetworksConfigObservation {
	if in == nil {
		return nil
	}
	out := new(MasterAuthorizedNetworksConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterAuthorizedNetworksConfigParameters) DeepCopyInto(out *MasterAuthorizedNetworksConfigParameters) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]CidrBlocksParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterAuthorizedNetworksConfigParameters.
func (in *MasterAuthorizedNetworksConfigParameters) DeepCopy() *MasterAuthorizedNetworksConfigParameters {
	if in == nil {
		return nil
	}
	out := new(MasterAuthorizedNetworksConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersObservation) DeepCopyInto(out *MembersObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersObservation.
func (in *MembersObservation) DeepCopy() *MembersObservation {
	if in == nil {
		return nil
	}
	out := new(MembersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MembersParameters) DeepCopyInto(out *MembersParameters) {
	*out = *in
	if in.AccessType != nil {
		in, out := &in.AccessType, &out.AccessType
		*out = new(string)
		**out = **in
	}
	if in.GroupPrincipalID != nil {
		in, out := &in.GroupPrincipalID, &out.GroupPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.UserPrincipalID != nil {
		in, out := &in.UserPrincipalID, &out.UserPrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MembersParameters.
func (in *MembersParameters) DeepCopy() *MembersParameters {
	if in == nil {
		return nil
	}
	out := new(MembersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SearchOrder != nil {
		in, out := &in.SearchOrder, &out.SearchOrder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRuleObservation) DeepCopyInto(out *MetricRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRuleObservation.
func (in *MetricRuleObservation) DeepCopy() *MetricRuleObservation {
	if in == nil {
		return nil
	}
	out := new(MetricRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricRuleParameters) DeepCopyInto(out *MetricRuleParameters) {
	*out = *in
	if in.Comparison != nil {
		in, out := &in.Comparison, &out.Comparison
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.ThresholdValue != nil {
		in, out := &in.ThresholdValue, &out.ThresholdValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricRuleParameters.
func (in *MetricRuleParameters) DeepCopy() *MetricRuleParameters {
	if in == nil {
		return nil
	}
	out := new(MetricRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringObservation) DeepCopyInto(out *MonitoringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringObservation.
func (in *MonitoringObservation) DeepCopy() *MonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringParameters) DeepCopyInto(out *MonitoringParameters) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(float64)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]MonitoringTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]MonitoringUpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringParameters.
func (in *MonitoringParameters) DeepCopy() *MonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringTolerationsObservation) DeepCopyInto(out *MonitoringTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringTolerationsObservation.
func (in *MonitoringTolerationsObservation) DeepCopy() *MonitoringTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringTolerationsParameters) DeepCopyInto(out *MonitoringTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringTolerationsParameters.
func (in *MonitoringTolerationsParameters) DeepCopy() *MonitoringTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyObservation) DeepCopyInto(out *MonitoringUpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyObservation.
func (in *MonitoringUpdateStrategyObservation) DeepCopy() *MonitoringUpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyParameters) DeepCopyInto(out *MonitoringUpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]MonitoringUpdateStrategyRollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyParameters.
func (in *MonitoringUpdateStrategyParameters) DeepCopy() *MonitoringUpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyRollingUpdateObservation) DeepCopyInto(out *MonitoringUpdateStrategyRollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyRollingUpdateObservation.
func (in *MonitoringUpdateStrategyRollingUpdateObservation) DeepCopy() *MonitoringUpdateStrategyRollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyRollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringUpdateStrategyRollingUpdateParameters) DeepCopyInto(out *MonitoringUpdateStrategyRollingUpdateParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringUpdateStrategyRollingUpdateParameters.
func (in *MonitoringUpdateStrategyRollingUpdateParameters) DeepCopy() *MonitoringUpdateStrategyRollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(MonitoringUpdateStrategyRollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCalicoNetworkProviderObservation) DeepCopyInto(out *NetworkCalicoNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCalicoNetworkProviderObservation.
func (in *NetworkCalicoNetworkProviderObservation) DeepCopy() *NetworkCalicoNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkCalicoNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCalicoNetworkProviderParameters) DeepCopyInto(out *NetworkCalicoNetworkProviderParameters) {
	*out = *in
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCalicoNetworkProviderParameters.
func (in *NetworkCalicoNetworkProviderParameters) DeepCopy() *NetworkCalicoNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkCalicoNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCanalNetworkProviderObservation) DeepCopyInto(out *NetworkCanalNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCanalNetworkProviderObservation.
func (in *NetworkCanalNetworkProviderObservation) DeepCopy() *NetworkCanalNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkCanalNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCanalNetworkProviderParameters) DeepCopyInto(out *NetworkCanalNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCanalNetworkProviderParameters.
func (in *NetworkCanalNetworkProviderParameters) DeepCopy() *NetworkCanalNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkCanalNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFlannelNetworkProviderObservation) DeepCopyInto(out *NetworkFlannelNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFlannelNetworkProviderObservation.
func (in *NetworkFlannelNetworkProviderObservation) DeepCopy() *NetworkFlannelNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkFlannelNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFlannelNetworkProviderParameters) DeepCopyInto(out *NetworkFlannelNetworkProviderParameters) {
	*out = *in
	if in.Iface != nil {
		in, out := &in.Iface, &out.Iface
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFlannelNetworkProviderParameters.
func (in *NetworkFlannelNetworkProviderParameters) DeepCopy() *NetworkFlannelNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkFlannelNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.PublicNetwork != nil {
		in, out := &in.PublicNetwork, &out.PublicNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkTolerationsObservation) DeepCopyInto(out *NetworkTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkTolerationsObservation.
func (in *NetworkTolerationsObservation) DeepCopy() *NetworkTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkTolerationsParameters) DeepCopyInto(out *NetworkTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkTolerationsParameters.
func (in *NetworkTolerationsParameters) DeepCopy() *NetworkTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkWeaveNetworkProviderObservation) DeepCopyInto(out *NetworkWeaveNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkWeaveNetworkProviderObservation.
func (in *NetworkWeaveNetworkProviderObservation) DeepCopy() *NetworkWeaveNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkWeaveNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkWeaveNetworkProviderParameters) DeepCopyInto(out *NetworkWeaveNetworkProviderParameters) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkWeaveNetworkProviderParameters.
func (in *NetworkWeaveNetworkProviderParameters) DeepCopy() *NetworkWeaveNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkWeaveNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupsObservation) DeepCopyInto(out *NodeGroupsObservation) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupsObservation.
func (in *NodeGroupsObservation) DeepCopy() *NodeGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(NodeGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroupsParameters) DeepCopyInto(out *NodeGroupsParameters) {
	*out = *in
	if in.DesiredSize != nil {
		in, out := &in.DesiredSize, &out.DesiredSize
		*out = new(float64)
		**out = **in
	}
	if in.DiskSize != nil {
		in, out := &in.DiskSize, &out.DiskSize
		*out = new(float64)
		**out = **in
	}
	if in.EC2SSHKey != nil {
		in, out := &in.EC2SSHKey, &out.EC2SSHKey
		*out = new(string)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(bool)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LaunchTemplate != nil {
		in, out := &in.LaunchTemplate, &out.LaunchTemplate
		*out = make([]LaunchTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(float64)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequestSpotInstances != nil {
		in, out := &in.RequestSpotInstances, &out.RequestSpotInstances
		*out = new(bool)
		**out = **in
	}
	if in.ResourceTags != nil {
		in, out := &in.ResourceTags, &out.ResourceTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SpotInstanceTypes != nil {
		in, out := &in.SpotInstanceTypes, &out.SpotInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroupsParameters.
func (in *NodeGroupsParameters) DeepCopy() *NodeGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(NodeGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsObservation) DeepCopyInto(out *NodePoolsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsObservation.
func (in *NodePoolsObservation) DeepCopy() *NodePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(NodePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolsParameters) DeepCopyInto(out *NodePoolsParameters) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(float64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.VMSize != nil {
		in, out := &in.VMSize, &out.VMSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolsParameters.
func (in *NodePoolsParameters) DeepCopy() *NodePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(NodePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeRuleObservation) DeepCopyInto(out *NodeRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeRuleObservation.
func (in *NodeRuleObservation) DeepCopy() *NodeRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NodeRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeRuleParameters) DeepCopyInto(out *NodeRuleParameters) {
	*out = *in
	if in.CPUThreshold != nil {
		in, out := &in.CPUThreshold, &out.CPUThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.MemThreshold != nil {
		in, out := &in.MemThreshold, &out.MemThreshold
		*out = new(float64)
		**out = **in
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeRuleParameters.
func (in *NodeRuleParameters) DeepCopy() *NodeRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NodeRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodelocalObservation) DeepCopyInto(out *NodelocalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodelocalObservation.
func (in *NodelocalObservation) DeepCopy() *NodelocalObservation {
	if in == nil {
		return nil
	}
	out := new(NodelocalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodelocalParameters) DeepCopyInto(out *NodelocalParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodelocalParameters.
func (in *NodelocalParameters) DeepCopy() *NodelocalParameters {
	if in == nil {
		return nil
	}
	out := new(NodelocalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesObservation) DeepCopyInto(out *NodesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesObservation.
func (in *NodesObservation) DeepCopy() *NodesObservation {
	if in == nil {
		return nil
	}
	out := new(NodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesParameters) DeepCopyInto(out *NodesParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.DockerSocket != nil {
		in, out := &in.DockerSocket, &out.DockerSocket
		*out = new(string)
		**out = **in
	}
	if in.HostnameOverride != nil {
		in, out := &in.HostnameOverride, &out.HostnameOverride
		*out = new(string)
		**out = **in
	}
	if in.InternalAddress != nil {
		in, out := &in.InternalAddress, &out.InternalAddress
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesParameters.
func (in *NodesParameters) DeepCopy() *NodesParameters {
	if in == nil {
		return nil
	}
	out := new(NodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OkeConfigObservation) DeepCopyInto(out *OkeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OkeConfigObservation.
func (in *OkeConfigObservation) DeepCopy() *OkeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OkeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OkeConfigParameters) DeepCopyInto(out *OkeConfigParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CustomBootVolumeSize != nil {
		in, out := &in.CustomBootVolumeSize, &out.CustomBootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableKubernetesDashboard != nil {
		in, out := &in.EnableKubernetesDashboard, &out.EnableKubernetesDashboard
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateControlPlane != nil {
		in, out := &in.EnablePrivateControlPlane, &out.EnablePrivateControlPlane
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateNodes != nil {
		in, out := &in.EnablePrivateNodes, &out.EnablePrivateNodes
		*out = new(bool)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.FlexOcpus != nil {
		in, out := &in.FlexOcpus, &out.FlexOcpus
		*out = new(float64)
		**out = **in
	}
	if in.KMSKeyIDSecretRef != nil {
		in, out := &in.KMSKeyIDSecretRef, &out.KMSKeyIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LimitNodeCount != nil {
		in, out := &in.LimitNodeCount, &out.LimitNodeCount
		*out = new(float64)
		**out = **in
	}
	if in.LoadBalancerSubnetName1 != nil {
		in, out := &in.LoadBalancerSubnetName1, &out.LoadBalancerSubnetName1
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSubnetName2 != nil {
		in, out := &in.LoadBalancerSubnetName2, &out.LoadBalancerSubnetName2
		*out = new(string)
		**out = **in
	}
	if in.NodeImage != nil {
		in, out := &in.NodeImage, &out.NodeImage
		*out = new(string)
		**out = **in
	}
	if in.NodePoolDNSDomainName != nil {
		in, out := &in.NodePoolDNSDomainName, &out.NodePoolDNSDomainName
		*out = new(string)
		**out = **in
	}
	if in.NodePoolSubnetName != nil {
		in, out := &in.NodePoolSubnetName, &out.NodePoolSubnetName
		*out = new(string)
		**out = **in
	}
	if in.NodePublicKeyContents != nil {
		in, out := &in.NodePublicKeyContents, &out.NodePublicKeyContents
		*out = new(string)
		**out = **in
	}
	if in.NodeShape != nil {
		in, out := &in.NodeShape, &out.NodeShape
		*out = new(string)
		**out = **in
	}
	if in.PodCidr != nil {
		in, out := &in.PodCidr, &out.PodCidr
		*out = new(string)
		**out = **in
	}
	out.PrivateKeyContentsSecretRef = in.PrivateKeyContentsSecretRef
	if in.PrivateKeyPassphraseSecretRef != nil {
		in, out := &in.PrivateKeyPassphraseSecretRef, &out.PrivateKeyPassphraseSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.QuantityOfNodeSubnets != nil {
		in, out := &in.QuantityOfNodeSubnets, &out.QuantityOfNodeSubnets
		*out = new(float64)
		**out = **in
	}
	if in.QuantityPerSubnet != nil {
		in, out := &in.QuantityPerSubnet, &out.QuantityPerSubnet
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceCidr != nil {
		in, out := &in.ServiceCidr, &out.ServiceCidr
		*out = new(string)
		**out = **in
	}
	if in.ServiceDNSDomainName != nil {
		in, out := &in.ServiceDNSDomainName, &out.ServiceDNSDomainName
		*out = new(string)
		**out = **in
	}
	if in.SkipVcnDelete != nil {
		in, out := &in.SkipVcnDelete, &out.SkipVcnDelete
		*out = new(bool)
		**out = **in
	}
	if in.TenancyID != nil {
		in, out := &in.TenancyID, &out.TenancyID
		*out = new(string)
		**out = **in
	}
	if in.UserOcid != nil {
		in, out := &in.UserOcid, &out.UserOcid
		*out = new(string)
		**out = **in
	}
	if in.VcnCompartmentID != nil {
		in, out := &in.VcnCompartmentID, &out.VcnCompartmentID
		*out = new(string)
		**out = **in
	}
	if in.VcnName != nil {
		in, out := &in.VcnName, &out.VcnName
		*out = new(string)
		**out = **in
	}
	if in.WorkerNodeIngressCidr != nil {
		in, out := &in.WorkerNodeIngressCidr, &out.WorkerNodeIngressCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OkeConfigParameters.
func (in *OkeConfigParameters) DeepCopy() *OkeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OkeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderBlockStorageObservation) DeepCopyInto(out *OpenstackCloudProviderBlockStorageObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderBlockStorageObservation.
func (in *OpenstackCloudProviderBlockStorageObservation) DeepCopy() *OpenstackCloudProviderBlockStorageObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderBlockStorageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderBlockStorageParameters) DeepCopyInto(out *OpenstackCloudProviderBlockStorageParameters) {
	*out = *in
	if in.BsVersion != nil {
		in, out := &in.BsVersion, &out.BsVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreVolumeAz != nil {
		in, out := &in.IgnoreVolumeAz, &out.IgnoreVolumeAz
		*out = new(bool)
		**out = **in
	}
	if in.TrustDevicePath != nil {
		in, out := &in.TrustDevicePath, &out.TrustDevicePath
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderBlockStorageParameters.
func (in *OpenstackCloudProviderBlockStorageParameters) DeepCopy() *OpenstackCloudProviderBlockStorageParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderBlockStorageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderGlobalObservation) DeepCopyInto(out *OpenstackCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderGlobalObservation.
func (in *OpenstackCloudProviderGlobalObservation) DeepCopy() *OpenstackCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderGlobalParameters) DeepCopyInto(out *OpenstackCloudProviderGlobalParameters) {
	*out = *in
	if in.AuthURL != nil {
		in, out := &in.AuthURL, &out.AuthURL
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.DomainIDSecretRef != nil {
		in, out := &in.DomainIDSecretRef, &out.DomainIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TenantIDSecretRef != nil {
		in, out := &in.TenantIDSecretRef, &out.TenantIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TenantName != nil {
		in, out := &in.TenantName, &out.TenantName
		*out = new(string)
		**out = **in
	}
	if in.TrustIDSecretRef != nil {
		in, out := &in.TrustIDSecretRef, &out.TrustIDSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.UsernameSecretRef = in.UsernameSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderGlobalParameters.
func (in *OpenstackCloudProviderGlobalParameters) DeepCopy() *OpenstackCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderLoadBalancerObservation) DeepCopyInto(out *OpenstackCloudProviderLoadBalancerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderLoadBalancerObservation.
func (in *OpenstackCloudProviderLoadBalancerObservation) DeepCopy() *OpenstackCloudProviderLoadBalancerObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderLoadBalancerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderLoadBalancerParameters) DeepCopyInto(out *OpenstackCloudProviderLoadBalancerParameters) {
	*out = *in
	if in.CreateMonitor != nil {
		in, out := &in.CreateMonitor, &out.CreateMonitor
		*out = new(bool)
		**out = **in
	}
	if in.FloatingNetworkID != nil {
		in, out := &in.FloatingNetworkID, &out.FloatingNetworkID
		*out = new(string)
		**out = **in
	}
	if in.LBMethod != nil {
		in, out := &in.LBMethod, &out.LBMethod
		*out = new(string)
		**out = **in
	}
	if in.LBProvider != nil {
		in, out := &in.LBProvider, &out.LBProvider
		*out = new(string)
		**out = **in
	}
	if in.LBVersion != nil {
		in, out := &in.LBVersion, &out.LBVersion
		*out = new(string)
		**out = **in
	}
	if in.ManageSecurityGroups != nil {
		in, out := &in.ManageSecurityGroups, &out.ManageSecurityGroups
		*out = new(bool)
		**out = **in
	}
	if in.MonitorDelay != nil {
		in, out := &in.MonitorDelay, &out.MonitorDelay
		*out = new(string)
		**out = **in
	}
	if in.MonitorMaxRetries != nil {
		in, out := &in.MonitorMaxRetries, &out.MonitorMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.MonitorTimeout != nil {
		in, out := &in.MonitorTimeout, &out.MonitorTimeout
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UseOctavia != nil {
		in, out := &in.UseOctavia, &out.UseOctavia
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderLoadBalancerParameters.
func (in *OpenstackCloudProviderLoadBalancerParameters) DeepCopy() *OpenstackCloudProviderLoadBalancerParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderLoadBalancerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderMetadataObservation) DeepCopyInto(out *OpenstackCloudProviderMetadataObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderMetadataObservation.
func (in *OpenstackCloudProviderMetadataObservation) DeepCopy() *OpenstackCloudProviderMetadataObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderMetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderMetadataParameters) DeepCopyInto(out *OpenstackCloudProviderMetadataParameters) {
	*out = *in
	if in.RequestTimeout != nil {
		in, out := &in.RequestTimeout, &out.RequestTimeout
		*out = new(float64)
		**out = **in
	}
	if in.SearchOrder != nil {
		in, out := &in.SearchOrder, &out.SearchOrder
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderMetadataParameters.
func (in *OpenstackCloudProviderMetadataParameters) DeepCopy() *OpenstackCloudProviderMetadataParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderMetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderObservation) DeepCopyInto(out *OpenstackCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderObservation.
func (in *OpenstackCloudProviderObservation) DeepCopy() *OpenstackCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderParameters) DeepCopyInto(out *OpenstackCloudProviderParameters) {
	*out = *in
	if in.BlockStorage != nil {
		in, out := &in.BlockStorage, &out.BlockStorage
		*out = make([]BlockStorageParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]OpenstackCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = make([]LoadBalancerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Route != nil {
		in, out := &in.Route, &out.Route
		*out = make([]RouteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderParameters.
func (in *OpenstackCloudProviderParameters) DeepCopy() *OpenstackCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderRouteObservation) DeepCopyInto(out *OpenstackCloudProviderRouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderRouteObservation.
func (in *OpenstackCloudProviderRouteObservation) DeepCopy() *OpenstackCloudProviderRouteObservation {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderRouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenstackCloudProviderRouteParameters) DeepCopyInto(out *OpenstackCloudProviderRouteParameters) {
	*out = *in
	if in.RouterID != nil {
		in, out := &in.RouterID, &out.RouterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenstackCloudProviderRouteParameters.
func (in *OpenstackCloudProviderRouteParameters) DeepCopy() *OpenstackCloudProviderRouteParameters {
	if in == nil {
		return nil
	}
	out := new(OpenstackCloudProviderRouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateClusterConfigObservation) DeepCopyInto(out *PrivateClusterConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateClusterConfigObservation.
func (in *PrivateClusterConfigObservation) DeepCopy() *PrivateClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateClusterConfigParameters) DeepCopyInto(out *PrivateClusterConfigParameters) {
	*out = *in
	if in.EnablePrivateEndpoint != nil {
		in, out := &in.EnablePrivateEndpoint, &out.EnablePrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EnablePrivateNodes != nil {
		in, out := &in.EnablePrivateNodes, &out.EnablePrivateNodes
		*out = new(bool)
		**out = **in
	}
	if in.MasterIPv4CidrBlock != nil {
		in, out := &in.MasterIPv4CidrBlock, &out.MasterIPv4CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateClusterConfigParameters.
func (in *PrivateClusterConfigParameters) DeepCopy() *PrivateClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesEcrCredentialPluginObservation) DeepCopyInto(out *PrivateRegistriesEcrCredentialPluginObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesEcrCredentialPluginObservation.
func (in *PrivateRegistriesEcrCredentialPluginObservation) DeepCopy() *PrivateRegistriesEcrCredentialPluginObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesEcrCredentialPluginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesEcrCredentialPluginParameters) DeepCopyInto(out *PrivateRegistriesEcrCredentialPluginParameters) {
	*out = *in
	if in.AwsAccessKeyID != nil {
		in, out := &in.AwsAccessKeyID, &out.AwsAccessKeyID
		*out = new(string)
		**out = **in
	}
	if in.AwsSecretAccessKeySecretRef != nil {
		in, out := &in.AwsSecretAccessKeySecretRef, &out.AwsSecretAccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AwsSessionTokenSecretRef != nil {
		in, out := &in.AwsSessionTokenSecretRef, &out.AwsSessionTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesEcrCredentialPluginParameters.
func (in *PrivateRegistriesEcrCredentialPluginParameters) DeepCopy() *PrivateRegistriesEcrCredentialPluginParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesEcrCredentialPluginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesObservation) DeepCopyInto(out *PrivateRegistriesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesObservation.
func (in *PrivateRegistriesObservation) DeepCopy() *PrivateRegistriesObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateRegistriesParameters) DeepCopyInto(out *PrivateRegistriesParameters) {
	*out = *in
	if in.EcrCredentialPlugin != nil {
		in, out := &in.EcrCredentialPlugin, &out.EcrCredentialPlugin
		*out = make([]EcrCredentialPluginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateRegistriesParameters.
func (in *PrivateRegistriesParameters) DeepCopy() *PrivateRegistriesParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateRegistriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuestionsObservation) DeepCopyInto(out *QuestionsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuestionsObservation.
func (in *QuestionsObservation) DeepCopy() *QuestionsObservation {
	if in == nil {
		return nil
	}
	out := new(QuestionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuestionsParameters) DeepCopyInto(out *QuestionsParameters) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuestionsParameters.
func (in *QuestionsParameters) DeepCopy() *QuestionsParameters {
	if in == nil {
		return nil
	}
	out := new(QuestionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientsObservation) DeepCopyInto(out *RecipientsObservation) {
	*out = *in
	if in.NotifierType != nil {
		in, out := &in.NotifierType, &out.NotifierType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientsObservation.
func (in *RecipientsObservation) DeepCopy() *RecipientsObservation {
	if in == nil {
		return nil
	}
	out := new(RecipientsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecipientsParameters) DeepCopyInto(out *RecipientsParameters) {
	*out = *in
	if in.DefaultRecipient != nil {
		in, out := &in.DefaultRecipient, &out.DefaultRecipient
		*out = new(bool)
		**out = **in
	}
	if in.NotifierID != nil {
		in, out := &in.NotifierID, &out.NotifierID
		*out = new(string)
		**out = **in
	}
	if in.Recipient != nil {
		in, out := &in.Recipient, &out.Recipient
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecipientsParameters.
func (in *RecipientsParameters) DeepCopy() *RecipientsParameters {
	if in == nil {
		return nil
	}
	out := new(RecipientsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rke2ConfigObservation) DeepCopyInto(out *Rke2ConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rke2ConfigObservation.
func (in *Rke2ConfigObservation) DeepCopy() *Rke2ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(Rke2ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rke2ConfigParameters) DeepCopyInto(out *Rke2ConfigParameters) {
	*out = *in
	if in.UpgradeStrategy != nil {
		in, out := &in.UpgradeStrategy, &out.UpgradeStrategy
		*out = make([]Rke2ConfigUpgradeStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rke2ConfigParameters.
func (in *Rke2ConfigParameters) DeepCopy() *Rke2ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(Rke2ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rke2ConfigUpgradeStrategyObservation) DeepCopyInto(out *Rke2ConfigUpgradeStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rke2ConfigUpgradeStrategyObservation.
func (in *Rke2ConfigUpgradeStrategyObservation) DeepCopy() *Rke2ConfigUpgradeStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(Rke2ConfigUpgradeStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rke2ConfigUpgradeStrategyParameters) DeepCopyInto(out *Rke2ConfigUpgradeStrategyParameters) {
	*out = *in
	if in.DrainServerNodes != nil {
		in, out := &in.DrainServerNodes, &out.DrainServerNodes
		*out = new(bool)
		**out = **in
	}
	if in.DrainWorkerNodes != nil {
		in, out := &in.DrainWorkerNodes, &out.DrainWorkerNodes
		*out = new(bool)
		**out = **in
	}
	if in.ServerConcurrency != nil {
		in, out := &in.ServerConcurrency, &out.ServerConcurrency
		*out = new(float64)
		**out = **in
	}
	if in.WorkerConcurrency != nil {
		in, out := &in.WorkerConcurrency, &out.WorkerConcurrency
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rke2ConfigUpgradeStrategyParameters.
func (in *Rke2ConfigUpgradeStrategyParameters) DeepCopy() *Rke2ConfigUpgradeStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(Rke2ConfigUpgradeStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigAuthenticationObservation) DeepCopyInto(out *RkeConfigAuthenticationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigAuthenticationObservation.
func (in *RkeConfigAuthenticationObservation) DeepCopy() *RkeConfigAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigAuthenticationParameters) DeepCopyInto(out *RkeConfigAuthenticationParameters) {
	*out = *in
	if in.Sans != nil {
		in, out := &in.Sans, &out.Sans
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigAuthenticationParameters.
func (in *RkeConfigAuthenticationParameters) DeepCopy() *RkeConfigAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigAuthorizationObservation) DeepCopyInto(out *RkeConfigAuthorizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigAuthorizationObservation.
func (in *RkeConfigAuthorizationObservation) DeepCopy() *RkeConfigAuthorizationObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigAuthorizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigAuthorizationParameters) DeepCopyInto(out *RkeConfigAuthorizationParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigAuthorizationParameters.
func (in *RkeConfigAuthorizationParameters) DeepCopy() *RkeConfigAuthorizationParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigAuthorizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigBastionHostObservation) DeepCopyInto(out *RkeConfigBastionHostObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigBastionHostObservation.
func (in *RkeConfigBastionHostObservation) DeepCopy() *RkeConfigBastionHostObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigBastionHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigBastionHostParameters) DeepCopyInto(out *RkeConfigBastionHostParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigBastionHostParameters.
func (in *RkeConfigBastionHostParameters) DeepCopy() *RkeConfigBastionHostParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigBastionHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigCloudProviderObservation) DeepCopyInto(out *RkeConfigCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigCloudProviderObservation.
func (in *RkeConfigCloudProviderObservation) DeepCopy() *RkeConfigCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigCloudProviderParameters) DeepCopyInto(out *RkeConfigCloudProviderParameters) {
	*out = *in
	if in.AwsCloudProvider != nil {
		in, out := &in.AwsCloudProvider, &out.AwsCloudProvider
		*out = make([]CloudProviderAwsCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AzureCloudProvider != nil {
		in, out := &in.AzureCloudProvider, &out.AzureCloudProvider
		*out = make([]CloudProviderAzureCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomCloudProvider != nil {
		in, out := &in.CustomCloudProvider, &out.CustomCloudProvider
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenstackCloudProvider != nil {
		in, out := &in.OpenstackCloudProvider, &out.OpenstackCloudProvider
		*out = make([]CloudProviderOpenstackCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VsphereCloudProvider != nil {
		in, out := &in.VsphereCloudProvider, &out.VsphereCloudProvider
		*out = make([]CloudProviderVsphereCloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigCloudProviderParameters.
func (in *RkeConfigCloudProviderParameters) DeepCopy() *RkeConfigCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigDNSObservation) DeepCopyInto(out *RkeConfigDNSObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigDNSObservation.
func (in *RkeConfigDNSObservation) DeepCopy() *RkeConfigDNSObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigDNSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigDNSParameters) DeepCopyInto(out *RkeConfigDNSParameters) {
	*out = *in
	if in.LinearAutoscalerParams != nil {
		in, out := &in.LinearAutoscalerParams, &out.LinearAutoscalerParams
		*out = make([]DNSLinearAutoscalerParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Nodelocal != nil {
		in, out := &in.Nodelocal, &out.Nodelocal
		*out = make([]DNSNodelocalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.ReverseCidrs != nil {
		in, out := &in.ReverseCidrs, &out.ReverseCidrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]DNSTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]DNSUpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpstreamNameservers != nil {
		in, out := &in.UpstreamNameservers, &out.UpstreamNameservers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigDNSParameters.
func (in *RkeConfigDNSParameters) DeepCopy() *RkeConfigDNSParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigDNSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigIngressObservation) DeepCopyInto(out *RkeConfigIngressObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigIngressObservation.
func (in *RkeConfigIngressObservation) DeepCopy() *RkeConfigIngressObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigIngressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigIngressParameters) DeepCopyInto(out *RkeConfigIngressParameters) {
	*out = *in
	if in.DNSPolicy != nil {
		in, out := &in.DNSPolicy, &out.DNSPolicy
		*out = new(string)
		**out = **in
	}
	if in.DefaultBackend != nil {
		in, out := &in.DefaultBackend, &out.DefaultBackend
		*out = new(bool)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(float64)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]RkeConfigIngressTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]RkeConfigIngressUpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigIngressParameters.
func (in *RkeConfigIngressParameters) DeepCopy() *RkeConfigIngressParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigIngressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigIngressTolerationsObservation) DeepCopyInto(out *RkeConfigIngressTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigIngressTolerationsObservation.
func (in *RkeConfigIngressTolerationsObservation) DeepCopy() *RkeConfigIngressTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigIngressTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigIngressTolerationsParameters) DeepCopyInto(out *RkeConfigIngressTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigIngressTolerationsParameters.
func (in *RkeConfigIngressTolerationsParameters) DeepCopy() *RkeConfigIngressTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigIngressTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigIngressUpdateStrategyObservation) DeepCopyInto(out *RkeConfigIngressUpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigIngressUpdateStrategyObservation.
func (in *RkeConfigIngressUpdateStrategyObservation) DeepCopy() *RkeConfigIngressUpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigIngressUpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigIngressUpdateStrategyParameters) DeepCopyInto(out *RkeConfigIngressUpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]IngressUpdateStrategyRollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigIngressUpdateStrategyParameters.
func (in *RkeConfigIngressUpdateStrategyParameters) DeepCopy() *RkeConfigIngressUpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigIngressUpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringObservation) DeepCopyInto(out *RkeConfigMonitoringObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringObservation.
func (in *RkeConfigMonitoringObservation) DeepCopy() *RkeConfigMonitoringObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringParameters) DeepCopyInto(out *RkeConfigMonitoringParameters) {
	*out = *in
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(float64)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]RkeConfigMonitoringTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateStrategy != nil {
		in, out := &in.UpdateStrategy, &out.UpdateStrategy
		*out = make([]RkeConfigMonitoringUpdateStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringParameters.
func (in *RkeConfigMonitoringParameters) DeepCopy() *RkeConfigMonitoringParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringTolerationsObservation) DeepCopyInto(out *RkeConfigMonitoringTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringTolerationsObservation.
func (in *RkeConfigMonitoringTolerationsObservation) DeepCopy() *RkeConfigMonitoringTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringTolerationsParameters) DeepCopyInto(out *RkeConfigMonitoringTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringTolerationsParameters.
func (in *RkeConfigMonitoringTolerationsParameters) DeepCopy() *RkeConfigMonitoringTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringUpdateStrategyObservation) DeepCopyInto(out *RkeConfigMonitoringUpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringUpdateStrategyObservation.
func (in *RkeConfigMonitoringUpdateStrategyObservation) DeepCopy() *RkeConfigMonitoringUpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringUpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringUpdateStrategyParameters) DeepCopyInto(out *RkeConfigMonitoringUpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]RkeConfigMonitoringUpdateStrategyRollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringUpdateStrategyParameters.
func (in *RkeConfigMonitoringUpdateStrategyParameters) DeepCopy() *RkeConfigMonitoringUpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringUpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringUpdateStrategyRollingUpdateObservation) DeepCopyInto(out *RkeConfigMonitoringUpdateStrategyRollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringUpdateStrategyRollingUpdateObservation.
func (in *RkeConfigMonitoringUpdateStrategyRollingUpdateObservation) DeepCopy() *RkeConfigMonitoringUpdateStrategyRollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringUpdateStrategyRollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigMonitoringUpdateStrategyRollingUpdateParameters) DeepCopyInto(out *RkeConfigMonitoringUpdateStrategyRollingUpdateParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigMonitoringUpdateStrategyRollingUpdateParameters.
func (in *RkeConfigMonitoringUpdateStrategyRollingUpdateParameters) DeepCopy() *RkeConfigMonitoringUpdateStrategyRollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigMonitoringUpdateStrategyRollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNetworkObservation) DeepCopyInto(out *RkeConfigNetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNetworkObservation.
func (in *RkeConfigNetworkObservation) DeepCopy() *RkeConfigNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNetworkParameters) DeepCopyInto(out *RkeConfigNetworkParameters) {
	*out = *in
	if in.CalicoNetworkProvider != nil {
		in, out := &in.CalicoNetworkProvider, &out.CalicoNetworkProvider
		*out = make([]CalicoNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanalNetworkProvider != nil {
		in, out := &in.CanalNetworkProvider, &out.CanalNetworkProvider
		*out = make([]CanalNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FlannelNetworkProvider != nil {
		in, out := &in.FlannelNetworkProvider, &out.FlannelNetworkProvider
		*out = make([]FlannelNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(string)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]NetworkTolerationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeaveNetworkProvider != nil {
		in, out := &in.WeaveNetworkProvider, &out.WeaveNetworkProvider
		*out = make([]WeaveNetworkProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNetworkParameters.
func (in *RkeConfigNetworkParameters) DeepCopy() *RkeConfigNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNetworkTolerationsObservation) DeepCopyInto(out *RkeConfigNetworkTolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNetworkTolerationsObservation.
func (in *RkeConfigNetworkTolerationsObservation) DeepCopy() *RkeConfigNetworkTolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNetworkTolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNetworkTolerationsParameters) DeepCopyInto(out *RkeConfigNetworkTolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNetworkTolerationsParameters.
func (in *RkeConfigNetworkTolerationsParameters) DeepCopy() *RkeConfigNetworkTolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNetworkTolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNodesObservation) DeepCopyInto(out *RkeConfigNodesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNodesObservation.
func (in *RkeConfigNodesObservation) DeepCopy() *RkeConfigNodesObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigNodesParameters) DeepCopyInto(out *RkeConfigNodesParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.DockerSocket != nil {
		in, out := &in.DockerSocket, &out.DockerSocket
		*out = new(string)
		**out = **in
	}
	if in.HostnameOverride != nil {
		in, out := &in.HostnameOverride, &out.HostnameOverride
		*out = new(string)
		**out = **in
	}
	if in.InternalAddress != nil {
		in, out := &in.InternalAddress, &out.InternalAddress
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeID != nil {
		in, out := &in.NodeID, &out.NodeID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeySecretRef != nil {
		in, out := &in.SSHKeySecretRef, &out.SSHKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigNodesParameters.
func (in *RkeConfigNodesParameters) DeepCopy() *RkeConfigNodesParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigObservation) DeepCopyInto(out *RkeConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigObservation.
func (in *RkeConfigObservation) DeepCopy() *RkeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigParameters) DeepCopyInto(out *RkeConfigParameters) {
	*out = *in
	if in.AddonJobTimeout != nil {
		in, out := &in.AddonJobTimeout, &out.AddonJobTimeout
		*out = new(float64)
		**out = **in
	}
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = new(string)
		**out = **in
	}
	if in.AddonsInclude != nil {
		in, out := &in.AddonsInclude, &out.AddonsInclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = make([]AuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Authorization != nil {
		in, out := &in.Authorization, &out.Authorization
		*out = make([]AuthorizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BastionHost != nil {
		in, out := &in.BastionHost, &out.BastionHost
		*out = make([]BastionHostParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudProvider != nil {
		in, out := &in.CloudProvider, &out.CloudProvider
		*out = make([]CloudProviderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNS != nil {
		in, out := &in.DNS, &out.DNS
		*out = make([]DNSParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableCriDockerd != nil {
		in, out := &in.EnableCriDockerd, &out.EnableCriDockerd
		*out = new(bool)
		**out = **in
	}
	if in.IgnoreDockerVersion != nil {
		in, out := &in.IgnoreDockerVersion, &out.IgnoreDockerVersion
		*out = new(bool)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]IngressParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make([]MonitoringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]RkeConfigNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]NodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixPath != nil {
		in, out := &in.PrefixPath, &out.PrefixPath
		*out = new(string)
		**out = **in
	}
	if in.PrivateRegistries != nil {
		in, out := &in.PrivateRegistries, &out.PrivateRegistries
		*out = make([]PrivateRegistriesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSHAgentAuth != nil {
		in, out := &in.SSHAgentAuth, &out.SSHAgentAuth
		*out = new(bool)
		**out = **in
	}
	if in.SSHCertPath != nil {
		in, out := &in.SSHCertPath, &out.SSHCertPath
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = new(string)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpgradeStrategy != nil {
		in, out := &in.UpgradeStrategy, &out.UpgradeStrategy
		*out = make([]RkeConfigUpgradeStrategyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WinPrefixPath != nil {
		in, out := &in.WinPrefixPath, &out.WinPrefixPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigParameters.
func (in *RkeConfigParameters) DeepCopy() *RkeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigPrivateRegistriesObservation) DeepCopyInto(out *RkeConfigPrivateRegistriesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigPrivateRegistriesObservation.
func (in *RkeConfigPrivateRegistriesObservation) DeepCopy() *RkeConfigPrivateRegistriesObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigPrivateRegistriesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigPrivateRegistriesParameters) DeepCopyInto(out *RkeConfigPrivateRegistriesParameters) {
	*out = *in
	if in.EcrCredentialPlugin != nil {
		in, out := &in.EcrCredentialPlugin, &out.EcrCredentialPlugin
		*out = make([]PrivateRegistriesEcrCredentialPluginParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigPrivateRegistriesParameters.
func (in *RkeConfigPrivateRegistriesParameters) DeepCopy() *RkeConfigPrivateRegistriesParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigPrivateRegistriesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigServicesObservation) DeepCopyInto(out *RkeConfigServicesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigServicesObservation.
func (in *RkeConfigServicesObservation) DeepCopy() *RkeConfigServicesObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigServicesParameters) DeepCopyInto(out *RkeConfigServicesParameters) {
	*out = *in
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = make([]ServicesEtcdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeAPI != nil {
		in, out := &in.KubeAPI, &out.KubeAPI
		*out = make([]ServicesKubeAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeController != nil {
		in, out := &in.KubeController, &out.KubeController
		*out = make([]ServicesKubeControllerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = make([]ServicesKubeletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubeproxy != nil {
		in, out := &in.Kubeproxy, &out.Kubeproxy
		*out = make([]ServicesKubeproxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = make([]ServicesSchedulerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigServicesParameters.
func (in *RkeConfigServicesParameters) DeepCopy() *RkeConfigServicesParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigUpgradeStrategyObservation) DeepCopyInto(out *RkeConfigUpgradeStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigUpgradeStrategyObservation.
func (in *RkeConfigUpgradeStrategyObservation) DeepCopy() *RkeConfigUpgradeStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(RkeConfigUpgradeStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RkeConfigUpgradeStrategyParameters) DeepCopyInto(out *RkeConfigUpgradeStrategyParameters) {
	*out = *in
	if in.Drain != nil {
		in, out := &in.Drain, &out.Drain
		*out = new(bool)
		**out = **in
	}
	if in.DrainInput != nil {
		in, out := &in.DrainInput, &out.DrainInput
		*out = make([]DrainInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxUnavailableControlplane != nil {
		in, out := &in.MaxUnavailableControlplane, &out.MaxUnavailableControlplane
		*out = new(string)
		**out = **in
	}
	if in.MaxUnavailableWorker != nil {
		in, out := &in.MaxUnavailableWorker, &out.MaxUnavailableWorker
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RkeConfigUpgradeStrategyParameters.
func (in *RkeConfigUpgradeStrategyParameters) DeepCopy() *RkeConfigUpgradeStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(RkeConfigUpgradeStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBinding) DeepCopyInto(out *RoleTemplateBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBinding.
func (in *RoleTemplateBinding) DeepCopy() *RoleTemplateBinding {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplateBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingList) DeepCopyInto(out *RoleTemplateBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RoleTemplateBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingList.
func (in *RoleTemplateBindingList) DeepCopy() *RoleTemplateBindingList {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RoleTemplateBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingObservation) DeepCopyInto(out *RoleTemplateBindingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingObservation.
func (in *RoleTemplateBindingObservation) DeepCopy() *RoleTemplateBindingObservation {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingParameters) DeepCopyInto(out *RoleTemplateBindingParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.GroupPrincipalID != nil {
		in, out := &in.GroupPrincipalID, &out.GroupPrincipalID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RoleTemplateID != nil {
		in, out := &in.RoleTemplateID, &out.RoleTemplateID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserPrincipalID != nil {
		in, out := &in.UserPrincipalID, &out.UserPrincipalID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingParameters.
func (in *RoleTemplateBindingParameters) DeepCopy() *RoleTemplateBindingParameters {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingSpec) DeepCopyInto(out *RoleTemplateBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingSpec.
func (in *RoleTemplateBindingSpec) DeepCopy() *RoleTemplateBindingSpec {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleTemplateBindingStatus) DeepCopyInto(out *RoleTemplateBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleTemplateBindingStatus.
func (in *RoleTemplateBindingStatus) DeepCopy() *RoleTemplateBindingStatus {
	if in == nil {
		return nil
	}
	out := new(RoleTemplateBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateObservation) DeepCopyInto(out *RollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateObservation.
func (in *RollingUpdateObservation) DeepCopy() *RollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingUpdateParameters) DeepCopyInto(out *RollingUpdateParameters) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingUpdateParameters.
func (in *RollingUpdateParameters) DeepCopy() *RollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(RollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteObservation) DeepCopyInto(out *RouteObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteObservation.
func (in *RouteObservation) DeepCopy() *RouteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteParameters) DeepCopyInto(out *RouteParameters) {
	*out = *in
	if in.RouterID != nil {
		in, out := &in.RouterID, &out.RouterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteParameters.
func (in *RouteParameters) DeepCopy() *RouteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigObservation) DeepCopyInto(out *S3BackupConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigObservation.
func (in *S3BackupConfigObservation) DeepCopy() *S3BackupConfigObservation {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3BackupConfigParameters) DeepCopyInto(out *S3BackupConfigParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.CustomCA != nil {
		in, out := &in.CustomCA, &out.CustomCA
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3BackupConfigParameters.
func (in *S3BackupConfigParameters) DeepCopy() *S3BackupConfigParameters {
	if in == nil {
		return nil
	}
	out := new(S3BackupConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanConfigCisScanConfigObservation) DeepCopyInto(out *ScanConfigCisScanConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanConfigCisScanConfigObservation.
func (in *ScanConfigCisScanConfigObservation) DeepCopy() *ScanConfigCisScanConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScanConfigCisScanConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanConfigCisScanConfigParameters) DeepCopyInto(out *ScanConfigCisScanConfigParameters) {
	*out = *in
	if in.DebugMaster != nil {
		in, out := &in.DebugMaster, &out.DebugMaster
		*out = new(bool)
		**out = **in
	}
	if in.DebugWorker != nil {
		in, out := &in.DebugWorker, &out.DebugWorker
		*out = new(bool)
		**out = **in
	}
	if in.OverrideBenchmarkVersion != nil {
		in, out := &in.OverrideBenchmarkVersion, &out.OverrideBenchmarkVersion
		*out = new(string)
		**out = **in
	}
	if in.OverrideSkip != nil {
		in, out := &in.OverrideSkip, &out.OverrideSkip
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Profile != nil {
		in, out := &in.Profile, &out.Profile
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanConfigCisScanConfigParameters.
func (in *ScanConfigCisScanConfigParameters) DeepCopy() *ScanConfigCisScanConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScanConfigCisScanConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanConfigObservation) DeepCopyInto(out *ScanConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanConfigObservation.
func (in *ScanConfigObservation) DeepCopy() *ScanConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScanConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScanConfigParameters) DeepCopyInto(out *ScanConfigParameters) {
	*out = *in
	if in.CisScanConfig != nil {
		in, out := &in.CisScanConfig, &out.CisScanConfig
		*out = make([]CisScanConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScanConfigParameters.
func (in *ScanConfigParameters) DeepCopy() *ScanConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScanConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleConfigObservation) DeepCopyInto(out *ScheduleConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleConfigObservation.
func (in *ScheduleConfigObservation) DeepCopy() *ScheduleConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleConfigParameters) DeepCopyInto(out *ScheduleConfigParameters) {
	*out = *in
	if in.CronSchedule != nil {
		in, out := &in.CronSchedule, &out.CronSchedule
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleConfigParameters.
func (in *ScheduleConfigParameters) DeepCopy() *ScheduleConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanObservation) DeepCopyInto(out *ScheduledClusterScanObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanObservation.
func (in *ScheduledClusterScanObservation) DeepCopy() *ScheduledClusterScanObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanParameters) DeepCopyInto(out *ScheduledClusterScanParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ScanConfig != nil {
		in, out := &in.ScanConfig, &out.ScanConfig
		*out = make([]ScanConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScheduleConfig != nil {
		in, out := &in.ScheduleConfig, &out.ScheduleConfig
		*out = make([]ScheduleConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanParameters.
func (in *ScheduledClusterScanParameters) DeepCopy() *ScheduledClusterScanParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanScanConfigObservation) DeepCopyInto(out *ScheduledClusterScanScanConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanScanConfigObservation.
func (in *ScheduledClusterScanScanConfigObservation) DeepCopy() *ScheduledClusterScanScanConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanScanConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanScanConfigParameters) DeepCopyInto(out *ScheduledClusterScanScanConfigParameters) {
	*out = *in
	if in.CisScanConfig != nil {
		in, out := &in.CisScanConfig, &out.CisScanConfig
		*out = make([]ScanConfigCisScanConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanScanConfigParameters.
func (in *ScheduledClusterScanScanConfigParameters) DeepCopy() *ScheduledClusterScanScanConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanScanConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanScheduleConfigObservation) DeepCopyInto(out *ScheduledClusterScanScheduleConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanScheduleConfigObservation.
func (in *ScheduledClusterScanScheduleConfigObservation) DeepCopy() *ScheduledClusterScanScheduleConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanScheduleConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledClusterScanScheduleConfigParameters) DeepCopyInto(out *ScheduledClusterScanScheduleConfigParameters) {
	*out = *in
	if in.CronSchedule != nil {
		in, out := &in.CronSchedule, &out.CronSchedule
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledClusterScanScheduleConfigParameters.
func (in *ScheduledClusterScanScheduleConfigParameters) DeepCopy() *ScheduledClusterScanScheduleConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledClusterScanScheduleConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerObservation) DeepCopyInto(out *SchedulerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerObservation.
func (in *SchedulerObservation) DeepCopy() *SchedulerObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulerParameters) DeepCopyInto(out *SchedulerParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulerParameters.
func (in *SchedulerParameters) DeepCopy() *SchedulerParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsEncryptionConfigObservation) DeepCopyInto(out *SecretsEncryptionConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsEncryptionConfigObservation.
func (in *SecretsEncryptionConfigObservation) DeepCopy() *SecretsEncryptionConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SecretsEncryptionConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretsEncryptionConfigParameters) DeepCopyInto(out *SecretsEncryptionConfigParameters) {
	*out = *in
	if in.CustomConfig != nil {
		in, out := &in.CustomConfig, &out.CustomConfig
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretsEncryptionConfigParameters.
func (in *SecretsEncryptionConfigParameters) DeepCopy() *SecretsEncryptionConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SecretsEncryptionConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceOverrideObservation) DeepCopyInto(out *ServiceOverrideObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceOverrideObservation.
func (in *ServiceOverrideObservation) DeepCopy() *ServiceOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceOverrideParameters) DeepCopyInto(out *ServiceOverrideParameters) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SigningMethod != nil {
		in, out := &in.SigningMethod, &out.SigningMethod
		*out = new(string)
		**out = **in
	}
	if in.SigningName != nil {
		in, out := &in.SigningName, &out.SigningName
		*out = new(string)
		**out = **in
	}
	if in.SigningRegion != nil {
		in, out := &in.SigningRegion, &out.SigningRegion
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceOverrideParameters.
func (in *ServiceOverrideParameters) DeepCopy() *ServiceOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesEtcdObservation) DeepCopyInto(out *ServicesEtcdObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesEtcdObservation.
func (in *ServicesEtcdObservation) DeepCopy() *ServicesEtcdObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesEtcdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesEtcdParameters) DeepCopyInto(out *ServicesEtcdParameters) {
	*out = *in
	if in.BackupConfig != nil {
		in, out := &in.BackupConfig, &out.BackupConfig
		*out = make([]EtcdBackupConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CACert != nil {
		in, out := &in.CACert, &out.CACert
		*out = new(string)
		**out = **in
	}
	if in.CertSecretRef != nil {
		in, out := &in.CertSecretRef, &out.CertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Creation != nil {
		in, out := &in.Creation, &out.Creation
		*out = new(string)
		**out = **in
	}
	if in.ExternalUrls != nil {
		in, out := &in.ExternalUrls, &out.ExternalUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.GID != nil {
		in, out := &in.GID, &out.GID
		*out = new(float64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.KeySecretRef != nil {
		in, out := &in.KeySecretRef, &out.KeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(string)
		**out = **in
	}
	if in.Snapshot != nil {
		in, out := &in.Snapshot, &out.Snapshot
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesEtcdParameters.
func (in *ServicesEtcdParameters) DeepCopy() *ServicesEtcdParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesEtcdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIObservation) DeepCopyInto(out *ServicesKubeAPIObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIObservation.
func (in *ServicesKubeAPIObservation) DeepCopy() *ServicesKubeAPIObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeAPIParameters) DeepCopyInto(out *ServicesKubeAPIParameters) {
	*out = *in
	if in.AdmissionConfiguration != nil {
		in, out := &in.AdmissionConfiguration, &out.AdmissionConfiguration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AlwaysPullImages != nil {
		in, out := &in.AlwaysPullImages, &out.AlwaysPullImages
		*out = new(bool)
		**out = **in
	}
	if in.AuditLog != nil {
		in, out := &in.AuditLog, &out.AuditLog
		*out = make([]KubeAPIAuditLogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EventRateLimit != nil {
		in, out := &in.EventRateLimit, &out.EventRateLimit
		*out = make([]KubeAPIEventRateLimitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.PodSecurityPolicy != nil {
		in, out := &in.PodSecurityPolicy, &out.PodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SecretsEncryptionConfig != nil {
		in, out := &in.SecretsEncryptionConfig, &out.SecretsEncryptionConfig
		*out = make([]KubeAPISecretsEncryptionConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
	if in.ServiceNodePortRange != nil {
		in, out := &in.ServiceNodePortRange, &out.ServiceNodePortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeAPIParameters.
func (in *ServicesKubeAPIParameters) DeepCopy() *ServicesKubeAPIParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeAPIParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeControllerObservation) DeepCopyInto(out *ServicesKubeControllerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeControllerObservation.
func (in *ServicesKubeControllerObservation) DeepCopy() *ServicesKubeControllerObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeControllerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeControllerParameters) DeepCopyInto(out *ServicesKubeControllerParameters) {
	*out = *in
	if in.ClusterCidr != nil {
		in, out := &in.ClusterCidr, &out.ClusterCidr
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ServiceClusterIPRange != nil {
		in, out := &in.ServiceClusterIPRange, &out.ServiceClusterIPRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeControllerParameters.
func (in *ServicesKubeControllerParameters) DeepCopy() *ServicesKubeControllerParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeControllerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeletObservation) DeepCopyInto(out *ServicesKubeletObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeletObservation.
func (in *ServicesKubeletObservation) DeepCopy() *ServicesKubeletObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeletObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeletParameters) DeepCopyInto(out *ServicesKubeletParameters) {
	*out = *in
	if in.ClusterDNSServer != nil {
		in, out := &in.ClusterDNSServer, &out.ClusterDNSServer
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FailSwapOn != nil {
		in, out := &in.FailSwapOn, &out.FailSwapOn
		*out = new(bool)
		**out = **in
	}
	if in.GenerateServingCertificate != nil {
		in, out := &in.GenerateServingCertificate, &out.GenerateServingCertificate
		*out = new(bool)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InfraContainerImage != nil {
		in, out := &in.InfraContainerImage, &out.InfraContainerImage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeletParameters.
func (in *ServicesKubeletParameters) DeepCopy() *ServicesKubeletParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeletParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeproxyObservation) DeepCopyInto(out *ServicesKubeproxyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeproxyObservation.
func (in *ServicesKubeproxyObservation) DeepCopy() *ServicesKubeproxyObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeproxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesKubeproxyParameters) DeepCopyInto(out *ServicesKubeproxyParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesKubeproxyParameters.
func (in *ServicesKubeproxyParameters) DeepCopy() *ServicesKubeproxyParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesKubeproxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesObservation) DeepCopyInto(out *ServicesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesObservation.
func (in *ServicesObservation) DeepCopy() *ServicesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesParameters) DeepCopyInto(out *ServicesParameters) {
	*out = *in
	if in.Etcd != nil {
		in, out := &in.Etcd, &out.Etcd
		*out = make([]EtcdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeAPI != nil {
		in, out := &in.KubeAPI, &out.KubeAPI
		*out = make([]KubeAPIParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeController != nil {
		in, out := &in.KubeController, &out.KubeController
		*out = make([]KubeControllerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubelet != nil {
		in, out := &in.Kubelet, &out.Kubelet
		*out = make([]KubeletParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kubeproxy != nil {
		in, out := &in.Kubeproxy, &out.Kubeproxy
		*out = make([]KubeproxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scheduler != nil {
		in, out := &in.Scheduler, &out.Scheduler
		*out = make([]SchedulerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesParameters.
func (in *ServicesParameters) DeepCopy() *ServicesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesSchedulerObservation) DeepCopyInto(out *ServicesSchedulerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesSchedulerObservation.
func (in *ServicesSchedulerObservation) DeepCopy() *ServicesSchedulerObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesSchedulerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesSchedulerParameters) DeepCopyInto(out *ServicesSchedulerParameters) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ExtraBinds != nil {
		in, out := &in.ExtraBinds, &out.ExtraBinds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesSchedulerParameters.
func (in *ServicesSchedulerParameters) DeepCopy() *ServicesSchedulerParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesSchedulerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigObservation) DeepCopyInto(out *SplunkConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigObservation.
func (in *SplunkConfigObservation) DeepCopy() *SplunkConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SplunkConfigParameters) DeepCopyInto(out *SplunkConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeyPassSecretRef != nil {
		in, out := &in.ClientKeyPassSecretRef, &out.ClientKeyPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	out.TokenSecretRef = in.TokenSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SplunkConfigParameters.
func (in *SplunkConfigParameters) DeepCopy() *SplunkConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SplunkConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Sync) DeepCopyInto(out *Sync) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Sync.
func (in *Sync) DeepCopy() *Sync {
	if in == nil {
		return nil
	}
	out := new(Sync)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Sync) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncList) DeepCopyInto(out *SyncList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Sync, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncList.
func (in *SyncList) DeepCopy() *SyncList {
	if in == nil {
		return nil
	}
	out := new(SyncList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SyncList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncNodesObservation) DeepCopyInto(out *SyncNodesObservation) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPAddress != nil {
		in, out := &in.ExternalIPAddress, &out.ExternalIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodePoolID != nil {
		in, out := &in.NodePoolID, &out.NodePoolID
		*out = new(string)
		**out = **in
	}
	if in.NodeTemplateID != nil {
		in, out := &in.NodeTemplateID, &out.NodeTemplateID
		*out = new(string)
		**out = **in
	}
	if in.ProviderID != nil {
		in, out := &in.ProviderID, &out.ProviderID
		*out = new(string)
		**out = **in
	}
	if in.RequestedHostname != nil {
		in, out := &in.RequestedHostname, &out.RequestedHostname
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHUser != nil {
		in, out := &in.SSHUser, &out.SSHUser
		*out = new(string)
		**out = **in
	}
	if in.SystemInfo != nil {
		in, out := &in.SystemInfo, &out.SystemInfo
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncNodesObservation.
func (in *SyncNodesObservation) DeepCopy() *SyncNodesObservation {
	if in == nil {
		return nil
	}
	out := new(SyncNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncNodesParameters) DeepCopyInto(out *SyncNodesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncNodesParameters.
func (in *SyncNodesParameters) DeepCopy() *SyncNodesParameters {
	if in == nil {
		return nil
	}
	out := new(SyncNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncObservation) DeepCopyInto(out *SyncObservation) {
	*out = *in
	if in.DefaultProjectID != nil {
		in, out := &in.DefaultProjectID, &out.DefaultProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]SyncNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SystemProjectID != nil {
		in, out := &in.SystemProjectID, &out.SystemProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncObservation.
func (in *SyncObservation) DeepCopy() *SyncObservation {
	if in == nil {
		return nil
	}
	out := new(SyncObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncParameters) DeepCopyInto(out *SyncParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterIDRef != nil {
		in, out := &in.ClusterIDRef, &out.ClusterIDRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ClusterIDSelector != nil {
		in, out := &in.ClusterIDSelector, &out.ClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NodePoolIds != nil {
		in, out := &in.NodePoolIds, &out.NodePoolIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StateConfirm != nil {
		in, out := &in.StateConfirm, &out.StateConfirm
		*out = new(float64)
		**out = **in
	}
	if in.Synced != nil {
		in, out := &in.Synced, &out.Synced
		*out = new(bool)
		**out = **in
	}
	if in.WaitAlerting != nil {
		in, out := &in.WaitAlerting, &out.WaitAlerting
		*out = new(bool)
		**out = **in
	}
	if in.WaitCatalogs != nil {
		in, out := &in.WaitCatalogs, &out.WaitCatalogs
		*out = new(bool)
		**out = **in
	}
	if in.WaitMonitoring != nil {
		in, out := &in.WaitMonitoring, &out.WaitMonitoring
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncParameters.
func (in *SyncParameters) DeepCopy() *SyncParameters {
	if in == nil {
		return nil
	}
	out := new(SyncParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncSpec) DeepCopyInto(out *SyncSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncSpec.
func (in *SyncSpec) DeepCopy() *SyncSpec {
	if in == nil {
		return nil
	}
	out := new(SyncSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncStatus) DeepCopyInto(out *SyncStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncStatus.
func (in *SyncStatus) DeepCopy() *SyncStatus {
	if in == nil {
		return nil
	}
	out := new(SyncStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogConfigObservation) DeepCopyInto(out *SyslogConfigObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogConfigObservation.
func (in *SyslogConfigObservation) DeepCopy() *SyslogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SyslogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyslogConfigParameters) DeepCopyInto(out *SyslogConfigParameters) {
	*out = *in
	if in.CertificateSecretRef != nil {
		in, out := &in.CertificateSecretRef, &out.CertificateSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientCertSecretRef != nil {
		in, out := &in.ClientCertSecretRef, &out.ClientCertSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientKeySecretRef != nil {
		in, out := &in.ClientKeySecretRef, &out.ClientKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.EnableTLS != nil {
		in, out := &in.EnableTLS, &out.EnableTLS
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Program != nil {
		in, out := &in.Program, &out.Program
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SSLVerify != nil {
		in, out := &in.SSLVerify, &out.SSLVerify
		*out = new(bool)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyslogConfigParameters.
func (in *SyslogConfigParameters) DeepCopy() *SyslogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SyslogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemServiceRuleObservation) DeepCopyInto(out *SystemServiceRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemServiceRuleObservation.
func (in *SystemServiceRuleObservation) DeepCopy() *SystemServiceRuleObservation {
	if in == nil {
		return nil
	}
	out := new(SystemServiceRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemServiceRuleParameters) DeepCopyInto(out *SystemServiceRuleParameters) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemServiceRuleParameters.
func (in *SystemServiceRuleParameters) DeepCopy() *SystemServiceRuleParameters {
	if in == nil {
		return nil
	}
	out := new(SystemServiceRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsObservation) DeepCopyInto(out *TaintsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsObservation.
func (in *TaintsObservation) DeepCopy() *TaintsObservation {
	if in == nil {
		return nil
	}
	out := new(TaintsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaintsParameters) DeepCopyInto(out *TaintsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaintsParameters.
func (in *TaintsParameters) DeepCopy() *TaintsParameters {
	if in == nil {
		return nil
	}
	out := new(TaintsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Template) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateList) DeepCopyInto(out *TemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Template, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateList.
func (in *TemplateList) DeepCopy() *TemplateList {
	if in == nil {
		return nil
	}
	out := new(TemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateObservation) DeepCopyInto(out *TemplateObservation) {
	*out = *in
	if in.DefaultRevisionID != nil {
		in, out := &in.DefaultRevisionID, &out.DefaultRevisionID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateObservation.
func (in *TemplateObservation) DeepCopy() *TemplateObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameters) DeepCopyInto(out *TemplateParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]MembersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TemplateRevisions != nil {
		in, out := &in.TemplateRevisions, &out.TemplateRevisions
		*out = make([]TemplateRevisionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameters.
func (in *TemplateParameters) DeepCopy() *TemplateParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRevisionsObservation) DeepCopyInto(out *TemplateRevisionsObservation) {
	*out = *in
	if in.ClusterTemplateID != nil {
		in, out := &in.ClusterTemplateID, &out.ClusterTemplateID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRevisionsObservation.
func (in *TemplateRevisionsObservation) DeepCopy() *TemplateRevisionsObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateRevisionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRevisionsParameters) DeepCopyInto(out *TemplateRevisionsParameters) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Questions != nil {
		in, out := &in.Questions, &out.Questions
		*out = make([]QuestionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRevisionsParameters.
func (in *TemplateRevisionsParameters) DeepCopy() *TemplateRevisionsParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateRevisionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateSpec) DeepCopyInto(out *TemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateSpec.
func (in *TemplateSpec) DeepCopy() *TemplateSpec {
	if in == nil {
		return nil
	}
	out := new(TemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateStatus) DeepCopyInto(out *TemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateStatus.
func (in *TemplateStatus) DeepCopy() *TemplateStatus {
	if in == nil {
		return nil
	}
	out := new(TemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TolerationsObservation) DeepCopyInto(out *TolerationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TolerationsObservation.
func (in *TolerationsObservation) DeepCopy() *TolerationsObservation {
	if in == nil {
		return nil
	}
	out := new(TolerationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TolerationsParameters) DeepCopyInto(out *TolerationsParameters) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TolerationsParameters.
func (in *TolerationsParameters) DeepCopy() *TolerationsParameters {
	if in == nil {
		return nil
	}
	out := new(TolerationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyObservation) DeepCopyInto(out *UpdateStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyObservation.
func (in *UpdateStrategyObservation) DeepCopy() *UpdateStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyParameters) DeepCopyInto(out *UpdateStrategyParameters) {
	*out = *in
	if in.RollingUpdate != nil {
		in, out := &in.RollingUpdate, &out.RollingUpdate
		*out = make([]RollingUpdateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyParameters.
func (in *UpdateStrategyParameters) DeepCopy() *UpdateStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyRollingUpdateObservation) DeepCopyInto(out *UpdateStrategyRollingUpdateObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyRollingUpdateObservation.
func (in *UpdateStrategyRollingUpdateObservation) DeepCopy() *UpdateStrategyRollingUpdateObservation {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyRollingUpdateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdateStrategyRollingUpdateParameters) DeepCopyInto(out *UpdateStrategyRollingUpdateParameters) {
	*out = *in
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdateStrategyRollingUpdateParameters.
func (in *UpdateStrategyRollingUpdateParameters) DeepCopy() *UpdateStrategyRollingUpdateParameters {
	if in == nil {
		return nil
	}
	out := new(UpdateStrategyRollingUpdateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyDrainInputObservation) DeepCopyInto(out *UpgradeStrategyDrainInputObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyDrainInputObservation.
func (in *UpgradeStrategyDrainInputObservation) DeepCopy() *UpgradeStrategyDrainInputObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyDrainInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyDrainInputParameters) DeepCopyInto(out *UpgradeStrategyDrainInputParameters) {
	*out = *in
	if in.DeleteLocalData != nil {
		in, out := &in.DeleteLocalData, &out.DeleteLocalData
		*out = new(bool)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(float64)
		**out = **in
	}
	if in.IgnoreDaemonSets != nil {
		in, out := &in.IgnoreDaemonSets, &out.IgnoreDaemonSets
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyDrainInputParameters.
func (in *UpgradeStrategyDrainInputParameters) DeepCopy() *UpgradeStrategyDrainInputParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyDrainInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyObservation) DeepCopyInto(out *UpgradeStrategyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyObservation.
func (in *UpgradeStrategyObservation) DeepCopy() *UpgradeStrategyObservation {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStrategyParameters) DeepCopyInto(out *UpgradeStrategyParameters) {
	*out = *in
	if in.DrainServerNodes != nil {
		in, out := &in.DrainServerNodes, &out.DrainServerNodes
		*out = new(bool)
		**out = **in
	}
	if in.DrainWorkerNodes != nil {
		in, out := &in.DrainWorkerNodes, &out.DrainWorkerNodes
		*out = new(bool)
		**out = **in
	}
	if in.ServerConcurrency != nil {
		in, out := &in.ServerConcurrency, &out.ServerConcurrency
		*out = new(float64)
		**out = **in
	}
	if in.WorkerConcurrency != nil {
		in, out := &in.WorkerConcurrency, &out.WorkerConcurrency
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStrategyParameters.
func (in *UpgradeStrategyParameters) DeepCopy() *UpgradeStrategyParameters {
	if in == nil {
		return nil
	}
	out := new(UpgradeStrategyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCenterObservation) DeepCopyInto(out *VirtualCenterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCenterObservation.
func (in *VirtualCenterObservation) DeepCopy() *VirtualCenterObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualCenterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCenterParameters) DeepCopyInto(out *VirtualCenterParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCenterParameters.
func (in *VirtualCenterParameters) DeepCopy() *VirtualCenterParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCenterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderDiskObservation) DeepCopyInto(out *VsphereCloudProviderDiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderDiskObservation.
func (in *VsphereCloudProviderDiskObservation) DeepCopy() *VsphereCloudProviderDiskObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderDiskParameters) DeepCopyInto(out *VsphereCloudProviderDiskParameters) {
	*out = *in
	if in.ScsiControllerType != nil {
		in, out := &in.ScsiControllerType, &out.ScsiControllerType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderDiskParameters.
func (in *VsphereCloudProviderDiskParameters) DeepCopy() *VsphereCloudProviderDiskParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderGlobalObservation) DeepCopyInto(out *VsphereCloudProviderGlobalObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderGlobalObservation.
func (in *VsphereCloudProviderGlobalObservation) DeepCopy() *VsphereCloudProviderGlobalObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderGlobalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderGlobalParameters) DeepCopyInto(out *VsphereCloudProviderGlobalParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.InsecureFlag != nil {
		in, out := &in.InsecureFlag, &out.InsecureFlag
		*out = new(bool)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	if in.UserSecretRef != nil {
		in, out := &in.UserSecretRef, &out.UserSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderGlobalParameters.
func (in *VsphereCloudProviderGlobalParameters) DeepCopy() *VsphereCloudProviderGlobalParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderGlobalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderNetworkObservation) DeepCopyInto(out *VsphereCloudProviderNetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderNetworkObservation.
func (in *VsphereCloudProviderNetworkObservation) DeepCopy() *VsphereCloudProviderNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderNetworkParameters) DeepCopyInto(out *VsphereCloudProviderNetworkParameters) {
	*out = *in
	if in.PublicNetwork != nil {
		in, out := &in.PublicNetwork, &out.PublicNetwork
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderNetworkParameters.
func (in *VsphereCloudProviderNetworkParameters) DeepCopy() *VsphereCloudProviderNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderObservation) DeepCopyInto(out *VsphereCloudProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderObservation.
func (in *VsphereCloudProviderObservation) DeepCopy() *VsphereCloudProviderObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderParameters) DeepCopyInto(out *VsphereCloudProviderParameters) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = make([]VsphereCloudProviderGlobalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]NetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualCenter != nil {
		in, out := &in.VirtualCenter, &out.VirtualCenter
		*out = make([]VirtualCenterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Workspace != nil {
		in, out := &in.Workspace, &out.Workspace
		*out = make([]WorkspaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderParameters.
func (in *VsphereCloudProviderParameters) DeepCopy() *VsphereCloudProviderParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderVirtualCenterObservation) DeepCopyInto(out *VsphereCloudProviderVirtualCenterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderVirtualCenterObservation.
func (in *VsphereCloudProviderVirtualCenterObservation) DeepCopy() *VsphereCloudProviderVirtualCenterObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderVirtualCenterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderVirtualCenterParameters) DeepCopyInto(out *VsphereCloudProviderVirtualCenterParameters) {
	*out = *in
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.SoapRoundtripCount != nil {
		in, out := &in.SoapRoundtripCount, &out.SoapRoundtripCount
		*out = new(float64)
		**out = **in
	}
	out.UserSecretRef = in.UserSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderVirtualCenterParameters.
func (in *VsphereCloudProviderVirtualCenterParameters) DeepCopy() *VsphereCloudProviderVirtualCenterParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderVirtualCenterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderWorkspaceObservation) DeepCopyInto(out *VsphereCloudProviderWorkspaceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderWorkspaceObservation.
func (in *VsphereCloudProviderWorkspaceObservation) DeepCopy() *VsphereCloudProviderWorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderWorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VsphereCloudProviderWorkspaceParameters) DeepCopyInto(out *VsphereCloudProviderWorkspaceParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DefaultDatastore != nil {
		in, out := &in.DefaultDatastore, &out.DefaultDatastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcepoolPath != nil {
		in, out := &in.ResourcepoolPath, &out.ResourcepoolPath
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VsphereCloudProviderWorkspaceParameters.
func (in *VsphereCloudProviderWorkspaceParameters) DeepCopy() *VsphereCloudProviderWorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(VsphereCloudProviderWorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeaveNetworkProviderObservation) DeepCopyInto(out *WeaveNetworkProviderObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeaveNetworkProviderObservation.
func (in *WeaveNetworkProviderObservation) DeepCopy() *WeaveNetworkProviderObservation {
	if in == nil {
		return nil
	}
	out := new(WeaveNetworkProviderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeaveNetworkProviderParameters) DeepCopyInto(out *WeaveNetworkProviderParameters) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeaveNetworkProviderParameters.
func (in *WeaveNetworkProviderParameters) DeepCopy() *WeaveNetworkProviderParameters {
	if in == nil {
		return nil
	}
	out := new(WeaveNetworkProviderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceObservation) DeepCopyInto(out *WorkspaceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceObservation.
func (in *WorkspaceObservation) DeepCopy() *WorkspaceObservation {
	if in == nil {
		return nil
	}
	out := new(WorkspaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkspaceParameters) DeepCopyInto(out *WorkspaceParameters) {
	*out = *in
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DefaultDatastore != nil {
		in, out := &in.DefaultDatastore, &out.DefaultDatastore
		*out = new(string)
		**out = **in
	}
	if in.Folder != nil {
		in, out := &in.Folder, &out.Folder
		*out = new(string)
		**out = **in
	}
	if in.ResourcepoolPath != nil {
		in, out := &in.ResourcepoolPath, &out.ResourcepoolPath
		*out = new(string)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkspaceParameters.
func (in *WorkspaceParameters) DeepCopy() *WorkspaceParameters {
	if in == nil {
		return nil
	}
	out := new(WorkspaceParameters)
	in.DeepCopyInto(out)
	return out
}
